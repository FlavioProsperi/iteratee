Index.PACKAGES = {"io.iteratee.monix" : [{"name" : "io.iteratee.monix.DefaultTaskModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.monix.DefaultTaskModule.F", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#F:cats.MonadError[monix.eval.Task,Throwable]", "kind" : "final val"}, {"label" : "monixTaskMonadError", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.monix.MonixInstances.monixTaskMonadError", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#monixTaskMonadError:cats.MonadError[monix.eval.Task,Throwable]", "kind" : "implicit final val"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): Task[A]", "member" : "io.iteratee.monix.TaskModule.captureEffect", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#captureEffect[A](a:=>A):monix.eval.Task[A]", "kind" : "final def"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.monix.TaskModule.M", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Task, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Task[R])(f: (R) ⇒ Task[A])(F: MonadError[Task, Throwable]): Task[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Task[Unit]): Iteratee[Task, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Task, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Task, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Task, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Task, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Task, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Task, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Task, E, A], ifEnd: Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Task, E2]): Enumeratee[Task, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Task, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Task, O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Task, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Task[I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/monix\/DefaultTaskModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/monix\/DefaultTaskModule.html", "kind" : "trait"}, {"name" : "io.iteratee.monix.MonixInstances", "members_trait" : [{"label" : "monixTaskMonadError", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.monix.MonixInstances.monixTaskMonadError", "link" : "io\/iteratee\/monix\/MonixInstances.html#monixTaskMonadError:cats.MonadError[monix.eval.Task,Throwable]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/monix\/MonixInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/monix\/MonixInstances.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/monix\/MonixInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/monix\/MonixInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/monix\/MonixInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/monix\/MonixInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/monix\/MonixInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/MonixInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/MonixInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/MonixInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/monix\/MonixInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/monix\/MonixInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/monix\/MonixInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/monix\/MonixInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/monix\/MonixInstances.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/monix\/MonixInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/monix\/MonixInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/monix\/MonixInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/monix\/MonixInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Type class instances for Monix types.", "trait" : "io\/iteratee\/monix\/MonixInstances.html", "kind" : "trait"}, {"name" : "io.iteratee.monix.task", "shortDescription" : "", "object" : "io\/iteratee\/monix\/task$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.monix.DefaultTaskModule.F", "link" : "io\/iteratee\/monix\/task$.html#F:cats.MonadError[monix.eval.Task,Throwable]", "kind" : "final val"}, {"label" : "monixTaskMonadError", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.monix.MonixInstances.monixTaskMonadError", "link" : "io\/iteratee\/monix\/task$.html#monixTaskMonadError:cats.MonadError[monix.eval.Task,Throwable]", "kind" : "implicit final val"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): Task[A]", "member" : "io.iteratee.monix.TaskModule.captureEffect", "link" : "io\/iteratee\/monix\/task$.html#captureEffect[A](a:=>A):monix.eval.Task[A]", "kind" : "final def"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.monix.TaskModule.M", "link" : "io\/iteratee\/monix\/task$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/monix\/task$.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/monix\/task$.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/monix\/task$.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/monix\/task$.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/monix\/task$.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/monix\/task$.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Task, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/monix\/task$.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/monix\/task$.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/monix\/task$.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/monix\/task$.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/monix\/task$.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Task[R])(f: (R) ⇒ Task[A])(F: MonadError[Task, Throwable]): Task[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/monix\/task$.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/monix\/task$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Task[Unit]): Iteratee[Task, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/monix\/task$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/monix\/task$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Task, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/monix\/task$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Task, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/monix\/task$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/monix\/task$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Task, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/monix\/task$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Task, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/monix\/task$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Task, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/monix\/task$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/monix\/task$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/monix\/task$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/monix\/task$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/monix\/task$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/monix\/task$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/monix\/task$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Task, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/monix\/task$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/monix\/task$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/monix\/task$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/monix\/task$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/monix\/task$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/monix\/task$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/monix\/task$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Task, E, A], ifEnd: Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/monix\/task$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/monix\/task$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/monix\/task$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/monix\/task$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/monix\/task$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/monix\/task$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/monix\/task$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/monix\/task$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/monix\/task$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/monix\/task$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/monix\/task$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/monix\/task$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/monix\/task$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/monix\/task$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/monix\/task$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/monix\/task$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/monix\/task$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/monix\/task$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/monix\/task$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Task, E2]): Enumeratee[Task, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/monix\/task$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/monix\/task$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/monix\/task$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Task, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/monix\/task$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/monix\/task$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Task, O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/monix\/task$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/monix\/task$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/monix\/task$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/monix\/task$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/monix\/task$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/monix\/task$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/monix\/task$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/monix\/task$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/monix\/task$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/monix\/task$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Task, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/monix\/task$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Task[I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/monix\/task$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/monix\/task$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/monix\/task$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/monix\/task$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/monix\/task$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/monix\/task$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/monix\/task$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/monix\/task$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/monix\/task$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/task$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/task$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/task$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/monix\/task$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/monix\/task$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/monix\/task$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/monix\/task$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/monix\/task$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/monix\/task$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/monix\/task$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/monix\/task$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/monix\/task$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.monix.TaskModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): Task[A]", "member" : "io.iteratee.monix.TaskModule.captureEffect", "link" : "io\/iteratee\/monix\/TaskModule.html#captureEffect[A](a:=>A):monix.eval.Task[A]", "kind" : "final def"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.monix.TaskModule.M", "link" : "io\/iteratee\/monix\/TaskModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/monix\/TaskModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/monix\/TaskModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/monix\/TaskModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/monix\/TaskModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/monix\/TaskModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/monix\/TaskModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Task, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/monix\/TaskModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/monix\/TaskModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/monix\/TaskModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/monix\/TaskModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/monix\/TaskModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Task[R])(f: (R) ⇒ Task[A])(F: MonadError[Task, Throwable]): Task[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/monix\/TaskModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/monix\/TaskModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Task[Unit]): Iteratee[Task, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/monix\/TaskModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/monix\/TaskModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Task, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/monix\/TaskModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Task, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/monix\/TaskModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/monix\/TaskModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Task, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/monix\/TaskModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Task, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/monix\/TaskModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Task, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/monix\/TaskModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/monix\/TaskModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/monix\/TaskModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/monix\/TaskModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/monix\/TaskModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/monix\/TaskModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/monix\/TaskModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Task, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/monix\/TaskModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/monix\/TaskModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/monix\/TaskModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/monix\/TaskModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/monix\/TaskModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/monix\/TaskModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/monix\/TaskModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Task, E, A], ifEnd: Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/monix\/TaskModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/monix\/TaskModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/monix\/TaskModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/monix\/TaskModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/monix\/TaskModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/monix\/TaskModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/monix\/TaskModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/monix\/TaskModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/monix\/TaskModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/monix\/TaskModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/monix\/TaskModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/monix\/TaskModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/monix\/TaskModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/monix\/TaskModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/monix\/TaskModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/monix\/TaskModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/monix\/TaskModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/monix\/TaskModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/monix\/TaskModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Task, E2]): Enumeratee[Task, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/monix\/TaskModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/monix\/TaskModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/monix\/TaskModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Task, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/monix\/TaskModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/monix\/TaskModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Task, O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/monix\/TaskModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/monix\/TaskModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/monix\/TaskModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/monix\/TaskModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/monix\/TaskModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/monix\/TaskModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/monix\/TaskModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/monix\/TaskModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/monix\/TaskModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/monix\/TaskModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Task, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/monix\/TaskModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Task[I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/monix\/TaskModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/monix\/TaskModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/monix\/TaskModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/monix\/TaskModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/monix\/TaskModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/monix\/TaskModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/monix\/TaskModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/monix\/TaskModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/monix\/TaskModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/TaskModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/TaskModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/TaskModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/monix\/TaskModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/monix\/TaskModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/monix\/TaskModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/monix\/TaskModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/monix\/TaskModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/monix\/TaskModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/monix\/TaskModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/monix\/TaskModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/monix\/TaskModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): M[Task]", "member" : "io.iteratee.Module.F", "link" : "io\/iteratee\/monix\/TaskModule.html#F:Module.this.M[F]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "io\/iteratee\/monix\/TaskModule$.html", "members_object" : [{"label" : "instance", "tail" : "(taskMonadError: MonadError[Task, Throwable]): TaskModule", "member" : "io.iteratee.monix.TaskModule.instance", "link" : "io\/iteratee\/monix\/TaskModule$.html#instance(implicittaskMonadError:cats.MonadError[monix.eval.Task,Throwable]):io.iteratee.monix.TaskModule", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/monix\/TaskModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/monix\/TaskModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/monix\/TaskModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/monix\/TaskModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/monix\/TaskModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/monix\/TaskModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/monix\/TaskModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/TaskModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/TaskModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/monix\/TaskModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/monix\/TaskModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/monix\/TaskModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/monix\/TaskModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/monix\/TaskModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/monix\/TaskModule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/monix\/TaskModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/monix\/TaskModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/monix\/TaskModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/monix\/TaskModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/iteratee\/monix\/TaskModule.html", "kind" : "trait"}], "io.iteratee.scalaz" : [{"name" : "io.iteratee.scalaz.ScalazInstances", "members_trait" : [{"label" : "scalazTaskMonadError", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.scalaz.ScalazInstances.scalazTaskMonadError", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#scalazTaskMonadError:cats.MonadError[scalaz.concurrent.Task,Throwable]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/scalaz\/ScalazInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/scalaz\/ScalazInstances.html", "kind" : "trait"}, {"name" : "io.iteratee.scalaz.task", "shortDescription" : "", "object" : "io\/iteratee\/scalaz\/task$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): Task[A]", "member" : "io.iteratee.scalaz.TaskModule.captureEffect", "link" : "io\/iteratee\/scalaz\/task$.html#captureEffect[A](a:=>A):scalaz.concurrent.Task[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.scalaz.TaskModule.F", "link" : "io\/iteratee\/scalaz\/task$.html#F:cats.MonadError[scalaz.concurrent.Task,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.scalaz.TaskModule.M", "link" : "io\/iteratee\/scalaz\/task$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/scalaz\/task$.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/scalaz\/task$.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/scalaz\/task$.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/scalaz\/task$.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/scalaz\/task$.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/scalaz\/task$.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Task, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/scalaz\/task$.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/scalaz\/task$.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/scalaz\/task$.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/scalaz\/task$.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/scalaz\/task$.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Task[R])(f: (R) ⇒ Task[A])(F: MonadError[Task, Throwable]): Task[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/scalaz\/task$.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/scalaz\/task$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Task[Unit]): Iteratee[Task, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/scalaz\/task$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/scalaz\/task$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Task, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/scalaz\/task$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Task, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/scalaz\/task$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/scalaz\/task$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Task, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/scalaz\/task$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Task, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/scalaz\/task$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Task, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/scalaz\/task$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/scalaz\/task$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/scalaz\/task$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/scalaz\/task$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/scalaz\/task$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/scalaz\/task$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/scalaz\/task$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Task, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/scalaz\/task$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/scalaz\/task$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/scalaz\/task$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/scalaz\/task$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/scalaz\/task$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/scalaz\/task$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/scalaz\/task$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Task, E, A], ifEnd: Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/scalaz\/task$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/scalaz\/task$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/scalaz\/task$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/scalaz\/task$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/scalaz\/task$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/scalaz\/task$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/scalaz\/task$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/scalaz\/task$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/scalaz\/task$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/scalaz\/task$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/scalaz\/task$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/scalaz\/task$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/scalaz\/task$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/scalaz\/task$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/scalaz\/task$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/scalaz\/task$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/scalaz\/task$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/scalaz\/task$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/scalaz\/task$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Task, E2]): Enumeratee[Task, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/scalaz\/task$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/scalaz\/task$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/scalaz\/task$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Task, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/scalaz\/task$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/scalaz\/task$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Task, O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/scalaz\/task$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/scalaz\/task$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/scalaz\/task$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/scalaz\/task$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/scalaz\/task$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/scalaz\/task$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/scalaz\/task$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/scalaz\/task$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/scalaz\/task$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/scalaz\/task$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Task, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/scalaz\/task$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Task[I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/scalaz\/task$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/scalaz\/task$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "scalazTaskMonadError", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.scalaz.ScalazInstances.scalazTaskMonadError", "link" : "io\/iteratee\/scalaz\/task$.html#scalazTaskMonadError:cats.MonadError[scalaz.concurrent.Task,Throwable]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/scalaz\/task$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/scalaz\/task$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/scalaz\/task$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/scalaz\/task$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/scalaz\/task$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/scalaz\/task$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/scalaz\/task$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/task$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/task$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/task$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/scalaz\/task$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/scalaz\/task$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/scalaz\/task$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/scalaz\/task$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/scalaz\/task$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/scalaz\/task$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/scalaz\/task$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/scalaz\/task$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/scalaz\/task$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.scalaz.TaskModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): Task[A]", "member" : "io.iteratee.scalaz.TaskModule.captureEffect", "link" : "io\/iteratee\/scalaz\/TaskModule.html#captureEffect[A](a:=>A):scalaz.concurrent.Task[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.scalaz.TaskModule.F", "link" : "io\/iteratee\/scalaz\/TaskModule.html#F:cats.MonadError[scalaz.concurrent.Task,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.scalaz.TaskModule.M", "link" : "io\/iteratee\/scalaz\/TaskModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/scalaz\/TaskModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/scalaz\/TaskModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/scalaz\/TaskModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/scalaz\/TaskModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/scalaz\/TaskModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/scalaz\/TaskModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Task, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/scalaz\/TaskModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/scalaz\/TaskModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/scalaz\/TaskModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/scalaz\/TaskModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/scalaz\/TaskModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Task[R])(f: (R) ⇒ Task[A])(F: MonadError[Task, Throwable]): Task[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/scalaz\/TaskModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/scalaz\/TaskModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Task[Unit]): Iteratee[Task, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/scalaz\/TaskModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Task, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/scalaz\/TaskModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Task, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/scalaz\/TaskModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/scalaz\/TaskModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Task, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/scalaz\/TaskModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Task, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/scalaz\/TaskModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Task, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/scalaz\/TaskModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/scalaz\/TaskModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/scalaz\/TaskModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/scalaz\/TaskModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/scalaz\/TaskModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/scalaz\/TaskModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/scalaz\/TaskModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Task, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/scalaz\/TaskModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/scalaz\/TaskModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/scalaz\/TaskModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/scalaz\/TaskModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/scalaz\/TaskModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/scalaz\/TaskModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Task, E, A], ifEnd: Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/scalaz\/TaskModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/scalaz\/TaskModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/scalaz\/TaskModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/scalaz\/TaskModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/scalaz\/TaskModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/scalaz\/TaskModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/scalaz\/TaskModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/scalaz\/TaskModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/scalaz\/TaskModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/scalaz\/TaskModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/scalaz\/TaskModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/scalaz\/TaskModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/scalaz\/TaskModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/scalaz\/TaskModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/scalaz\/TaskModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/scalaz\/TaskModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Task, E2]): Enumeratee[Task, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/scalaz\/TaskModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/scalaz\/TaskModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/scalaz\/TaskModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Task, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/scalaz\/TaskModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/scalaz\/TaskModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Task, O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/scalaz\/TaskModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/scalaz\/TaskModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/scalaz\/TaskModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/scalaz\/TaskModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/scalaz\/TaskModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/scalaz\/TaskModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/scalaz\/TaskModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Task, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/scalaz\/TaskModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Task[I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/scalaz\/TaskModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/scalaz\/TaskModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "scalazTaskMonadError", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.scalaz.ScalazInstances.scalazTaskMonadError", "link" : "io\/iteratee\/scalaz\/TaskModule.html#scalazTaskMonadError:cats.MonadError[scalaz.concurrent.Task,Throwable]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/scalaz\/TaskModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/scalaz\/TaskModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/scalaz\/TaskModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/scalaz\/TaskModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/scalaz\/TaskModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/scalaz\/TaskModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/scalaz\/TaskModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/TaskModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/TaskModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/scalaz\/TaskModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/scalaz\/TaskModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/scalaz\/TaskModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/scalaz\/TaskModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/scalaz\/TaskModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/scalaz\/TaskModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/scalaz\/TaskModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/scalaz\/TaskModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/scalaz\/TaskModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/scalaz\/TaskModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/scalaz\/TaskModule.html", "kind" : "trait"}], "io.iteratee.files" : [{"name" : "io.iteratee.files.either", "shortDescription" : "", "object" : "io\/iteratee\/files\/either$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[[β$0$]Either[Throwable, β$0$], Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/either$.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[[β$0$]Either[Throwable, β$0$], Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/either$.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[[β$0$]Either[Throwable, β$0$], String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/either$.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[[β$0$]Either[Throwable, β$0$], String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/either$.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[[β$0$]Either[Throwable, β$0$], File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/either$.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[[β$0$]Either[Throwable, β$0$], File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/either$.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[[β$0$]Either[Throwable, β$0$], (ZipEntry, InputStream)]", "member" : "io.iteratee.files.NonSuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/either$.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[[β$0$]Either[Throwable, β$0$], Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/either$.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[[β$0$]Either[Throwable, β$0$], Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/either$.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[[β$0$]Either[Throwable, β$0$], String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/either$.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[[β$0$]Either[Throwable, β$0$], String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/either$.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Either[Throwable, R])(f: (R) ⇒ Either[Throwable, A])(F: MonadError[[β$0$]Either[Throwable, β$0$], Throwable]): Either[Throwable, A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/either$.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[[β$4$]Either[Throwable, β$4$], Throwable]", "member" : "io.iteratee.modules.EitherModule.F", "link" : "io\/iteratee\/files\/either$.html#F:cats.MonadError[[β$4$]scala.util.Either[Throwable,β$4$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherModule.M", "link" : "io\/iteratee\/files\/either$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/files\/either$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Either[Throwable, Unit]): Iteratee[[β$3$]Either[Throwable, β$3$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/files\/either$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/files\/either$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/files\/either$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/files\/either$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/files\/either$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/files\/either$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/files\/either$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/files\/either$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/files\/either$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/files\/either$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/files\/either$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/files\/either$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/files\/either$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/files\/either$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[β$3$]Either[Throwable, β$3$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/files\/either$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/files\/either$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/files\/either$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/files\/either$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/files\/either$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/files\/either$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/files\/either$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[β$3$]Either[Throwable, β$3$], E, A], ifEnd: Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/files\/either$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/files\/either$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/files\/either$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/files\/either$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/files\/either$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/files\/either$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/files\/either$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/files\/either$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/files\/either$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/files\/either$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/files\/either$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/files\/either$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/files\/either$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/files\/either$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/files\/either$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/files\/either$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/files\/either$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/files\/either$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/files\/either$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[β$1$]Either[Throwable, β$1$], E2]): Enumeratee[[β$1$]Either[Throwable, β$1$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/files\/either$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/files\/either$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/files\/either$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[β$1$]Either[Throwable, β$1$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/files\/either$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/files\/either$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[β$1$]Either[Throwable, β$1$], O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/files\/either$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/files\/either$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/files\/either$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/files\/either$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/files\/either$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/files\/either$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/files\/either$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/files\/either$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/files\/either$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/files\/either$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[β$1$]Either[Throwable, β$1$], I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/files\/either$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Either[Throwable, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/files\/either$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/files\/either$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/either$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/either$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/either$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/either$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/either$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/either$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/either$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/either$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/either$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/either$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/either$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/either$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/either$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/either$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/either$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/either$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/either$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/either$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/either$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.files.EitherFileModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[[β$0$]Either[Throwable, β$0$], Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/EitherFileModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[[β$0$]Either[Throwable, β$0$], Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/EitherFileModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[[β$0$]Either[Throwable, β$0$], String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/EitherFileModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[[β$0$]Either[Throwable, β$0$], String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/EitherFileModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[[β$0$]Either[Throwable, β$0$], File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/EitherFileModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[[β$0$]Either[Throwable, β$0$], File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/EitherFileModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[[β$0$]Either[Throwable, β$0$], (ZipEntry, InputStream)]", "member" : "io.iteratee.files.NonSuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/EitherFileModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[[β$0$]Either[Throwable, β$0$], Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/EitherFileModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[[β$0$]Either[Throwable, β$0$], Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/EitherFileModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[[β$0$]Either[Throwable, β$0$], String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/EitherFileModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[[β$0$]Either[Throwable, β$0$], String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/EitherFileModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Either[Throwable, R])(f: (R) ⇒ Either[Throwable, A])(F: MonadError[[β$0$]Either[Throwable, β$0$], Throwable]): Either[Throwable, A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/EitherFileModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[[β$4$]Either[Throwable, β$4$], Throwable]", "member" : "io.iteratee.modules.EitherModule.F", "link" : "io\/iteratee\/files\/EitherFileModule.html#F:cats.MonadError[[β$4$]scala.util.Either[Throwable,β$4$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherModule.M", "link" : "io\/iteratee\/files\/EitherFileModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/files\/EitherFileModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Either[Throwable, Unit]): Iteratee[[β$3$]Either[Throwable, β$3$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/files\/EitherFileModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/files\/EitherFileModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/files\/EitherFileModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/files\/EitherFileModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/files\/EitherFileModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/files\/EitherFileModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/files\/EitherFileModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/files\/EitherFileModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/files\/EitherFileModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/files\/EitherFileModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/files\/EitherFileModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/files\/EitherFileModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/files\/EitherFileModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/files\/EitherFileModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[β$3$]Either[Throwable, β$3$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/files\/EitherFileModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/files\/EitherFileModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/files\/EitherFileModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/files\/EitherFileModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/files\/EitherFileModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/files\/EitherFileModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/files\/EitherFileModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[β$3$]Either[Throwable, β$3$], E, A], ifEnd: Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/files\/EitherFileModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/files\/EitherFileModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/files\/EitherFileModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/files\/EitherFileModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/files\/EitherFileModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/files\/EitherFileModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/files\/EitherFileModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/files\/EitherFileModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/files\/EitherFileModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/files\/EitherFileModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/files\/EitherFileModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/files\/EitherFileModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/files\/EitherFileModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/files\/EitherFileModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/files\/EitherFileModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/files\/EitherFileModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/files\/EitherFileModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/files\/EitherFileModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/files\/EitherFileModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[β$1$]Either[Throwable, β$1$], E2]): Enumeratee[[β$1$]Either[Throwable, β$1$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/files\/EitherFileModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/files\/EitherFileModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/files\/EitherFileModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[β$1$]Either[Throwable, β$1$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/files\/EitherFileModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/files\/EitherFileModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[β$1$]Either[Throwable, β$1$], O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/files\/EitherFileModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/files\/EitherFileModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/files\/EitherFileModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/files\/EitherFileModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/files\/EitherFileModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/files\/EitherFileModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/files\/EitherFileModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/files\/EitherFileModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/files\/EitherFileModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/files\/EitherFileModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[β$1$]Either[Throwable, β$1$], I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/files\/EitherFileModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Either[Throwable, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/files\/EitherFileModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/files\/EitherFileModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/EitherFileModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/EitherFileModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/EitherFileModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/EitherFileModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/EitherFileModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/EitherFileModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/EitherFileModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/EitherFileModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/EitherFileModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/EitherFileModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/EitherFileModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/EitherFileModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/EitherFileModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/EitherFileModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/EitherFileModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/EitherFileModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/EitherFileModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/EitherFileModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/EitherFileModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/files\/EitherFileModule.html", "kind" : "trait"}, {"name" : "io.iteratee.files.eitherT", "shortDescription" : "", "object" : "io\/iteratee\/files\/eitherT$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): EitherT[Eval, Throwable, A]", "member" : "io.iteratee.files.EitherTFileModule.captureEffect", "link" : "io\/iteratee\/files\/eitherT$.html#captureEffect[A](a:=>A):cats.data.EitherT[cats.Eval,Throwable,A]", "kind" : "final def"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/eitherT$.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/eitherT$.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/eitherT$.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/eitherT$.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/eitherT$.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/eitherT$.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/eitherT$.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/eitherT$.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/eitherT$.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/eitherT$.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/eitherT$.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: EitherT[Eval, Throwable, R])(f: (R) ⇒ EitherT[Eval, Throwable, A])(F: MonadError[[γ$1$]EitherT[Eval, Throwable, γ$1$], Throwable]): EitherT[Eval, Throwable, A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/eitherT$.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[[γ$9$]EitherT[Eval, Throwable, γ$9$], Throwable]", "member" : "io.iteratee.modules.EitherTModule.F", "link" : "io\/iteratee\/files\/eitherT$.html#F:cats.MonadError[[γ$9$]cats.data.EitherT[cats.Eval,Throwable,γ$9$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherTModule.M", "link" : "io\/iteratee\/files\/eitherT$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/files\/eitherT$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ EitherT[Eval, Throwable, Unit]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/files\/eitherT$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/files\/eitherT$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/files\/eitherT$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/files\/eitherT$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/files\/eitherT$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/files\/eitherT$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/files\/eitherT$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/files\/eitherT$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/files\/eitherT$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/files\/eitherT$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/files\/eitherT$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/files\/eitherT$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/files\/eitherT$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/files\/eitherT$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/files\/eitherT$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/files\/eitherT$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/files\/eitherT$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/files\/eitherT$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/files\/eitherT$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/files\/eitherT$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/files\/eitherT$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A], ifEnd: EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/files\/eitherT$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/files\/eitherT$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/files\/eitherT$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/files\/eitherT$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/files\/eitherT$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/files\/eitherT$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/files\/eitherT$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/files\/eitherT$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/files\/eitherT$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/files\/eitherT$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/files\/eitherT$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/files\/eitherT$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/files\/eitherT$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/files\/eitherT$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/files\/eitherT$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/files\/eitherT$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/files\/eitherT$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/files\/eitherT$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/files\/eitherT$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], E2]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/files\/eitherT$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/files\/eitherT$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/files\/eitherT$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/files\/eitherT$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/files\/eitherT$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/files\/eitherT$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/files\/eitherT$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/files\/eitherT$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/files\/eitherT$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/files\/eitherT$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/files\/eitherT$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/files\/eitherT$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/files\/eitherT$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/files\/eitherT$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/files\/eitherT$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/files\/eitherT$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ EitherT[Eval, Throwable, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/files\/eitherT$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/files\/eitherT$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/eitherT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/eitherT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/eitherT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/eitherT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/eitherT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/eitherT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/eitherT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/eitherT$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/eitherT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/eitherT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/eitherT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/eitherT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/eitherT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/eitherT$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/eitherT$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/eitherT$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/eitherT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/eitherT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/eitherT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.files.EitherTFileModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): EitherT[Eval, Throwable, A]", "member" : "io.iteratee.files.EitherTFileModule.captureEffect", "link" : "io\/iteratee\/files\/EitherTFileModule.html#captureEffect[A](a:=>A):cats.data.EitherT[cats.Eval,Throwable,A]", "kind" : "final def"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/EitherTFileModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/EitherTFileModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/EitherTFileModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[[γ$1$]EitherT[Eval, Throwable, γ$1$], String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/EitherTFileModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/EitherTFileModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/EitherTFileModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/EitherTFileModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/EitherTFileModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/EitherTFileModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/EitherTFileModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[[γ$1$]EitherT[Eval, Throwable, γ$1$], String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/EitherTFileModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: EitherT[Eval, Throwable, R])(f: (R) ⇒ EitherT[Eval, Throwable, A])(F: MonadError[[γ$1$]EitherT[Eval, Throwable, γ$1$], Throwable]): EitherT[Eval, Throwable, A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/EitherTFileModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[[γ$9$]EitherT[Eval, Throwable, γ$9$], Throwable]", "member" : "io.iteratee.modules.EitherTModule.F", "link" : "io\/iteratee\/files\/EitherTFileModule.html#F:cats.MonadError[[γ$9$]cats.data.EitherT[cats.Eval,Throwable,γ$9$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherTModule.M", "link" : "io\/iteratee\/files\/EitherTFileModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/files\/EitherTFileModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ EitherT[Eval, Throwable, Unit]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/files\/EitherTFileModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/files\/EitherTFileModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/files\/EitherTFileModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/files\/EitherTFileModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/files\/EitherTFileModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/files\/EitherTFileModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/files\/EitherTFileModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/files\/EitherTFileModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/files\/EitherTFileModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/files\/EitherTFileModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/files\/EitherTFileModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/files\/EitherTFileModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/files\/EitherTFileModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/files\/EitherTFileModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/files\/EitherTFileModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/files\/EitherTFileModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/files\/EitherTFileModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/files\/EitherTFileModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/files\/EitherTFileModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A], ifEnd: EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/files\/EitherTFileModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/files\/EitherTFileModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/files\/EitherTFileModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/files\/EitherTFileModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/files\/EitherTFileModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/files\/EitherTFileModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/files\/EitherTFileModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/files\/EitherTFileModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/files\/EitherTFileModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/files\/EitherTFileModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/files\/EitherTFileModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/files\/EitherTFileModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/files\/EitherTFileModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/files\/EitherTFileModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/files\/EitherTFileModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/files\/EitherTFileModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], E2]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/files\/EitherTFileModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/files\/EitherTFileModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/files\/EitherTFileModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/files\/EitherTFileModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/files\/EitherTFileModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/files\/EitherTFileModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/files\/EitherTFileModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/files\/EitherTFileModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/files\/EitherTFileModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/files\/EitherTFileModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/files\/EitherTFileModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/files\/EitherTFileModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/files\/EitherTFileModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ EitherT[Eval, Throwable, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/files\/EitherTFileModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/files\/EitherTFileModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/EitherTFileModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/EitherTFileModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/EitherTFileModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/EitherTFileModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/EitherTFileModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/EitherTFileModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/EitherTFileModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/EitherTFileModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/EitherTFileModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/EitherTFileModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/EitherTFileModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/EitherTFileModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/EitherTFileModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/EitherTFileModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/EitherTFileModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/EitherTFileModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/EitherTFileModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/EitherTFileModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/EitherTFileModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/files\/EitherTFileModule.html", "kind" : "trait"}, {"name" : "io.iteratee.files.FileModule", "members_trait" : [{"label" : "bracket", "tail" : "(fr: F[R])(f: (R) ⇒ F[A])(F: MonadError[F, Throwable]): F[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/FileModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/FileModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/FileModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/FileModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/FileModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/FileModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/FileModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/FileModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/FileModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/FileModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/FileModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/FileModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/FileModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/FileModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/FileModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/FileModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/FileModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/FileModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/FileModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/FileModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[F, Array[Byte], Unit]", "member" : "io.iteratee.files.FileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/FileModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "abstract def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[F, Array[Byte], Unit]", "member" : "io.iteratee.files.FileModule.writeBytes", "link" : "io\/iteratee\/files\/FileModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "abstract def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[F, String, Unit]", "member" : "io.iteratee.files.FileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/FileModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "abstract def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[F, String, Unit]", "member" : "io.iteratee.files.FileModule.writeLines", "link" : "io\/iteratee\/files\/FileModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "abstract def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[F, File]", "member" : "io.iteratee.files.FileModule.listFilesRec", "link" : "io\/iteratee\/files\/FileModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "abstract def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[F, File]", "member" : "io.iteratee.files.FileModule.listFiles", "link" : "io\/iteratee\/files\/FileModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "abstract def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[F, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.FileModule.readZipStreams", "link" : "io\/iteratee\/files\/FileModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "abstract def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[F, Array[Byte]]", "member" : "io.iteratee.files.FileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/FileModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "abstract def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[F, Array[Byte]]", "member" : "io.iteratee.files.FileModule.readBytes", "link" : "io\/iteratee\/files\/FileModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "abstract def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[F, String]", "member" : "io.iteratee.files.FileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/FileModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "abstract def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[F, String]", "member" : "io.iteratee.files.FileModule.readLines", "link" : "io\/iteratee\/files\/FileModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/iteratee\/files\/FileModule.html", "kind" : "trait"}, {"name" : "io.iteratee.files.FutureFileModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Future, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/FutureFileModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Future, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/FutureFileModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Future, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/FutureFileModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Future, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/FutureFileModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Future, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/FutureFileModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Future, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/FutureFileModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Future, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.NonSuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/FutureFileModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Future, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/FutureFileModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Future, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/FutureFileModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Future, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/FutureFileModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Future, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/FutureFileModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Future[R])(f: (R) ⇒ Future[A])(F: MonadError[Future, Throwable]): Future[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/FutureFileModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[Future, Throwable]", "member" : "io.iteratee.modules.FutureModule.F", "link" : "io\/iteratee\/files\/FutureFileModule.html#F:cats.MonadError[scala.concurrent.Future,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.FutureModule.M", "link" : "io\/iteratee\/files\/FutureFileModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/files\/FutureFileModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Future[Unit]): Iteratee[Future, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/files\/FutureFileModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/files\/FutureFileModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Future, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/files\/FutureFileModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Future, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/files\/FutureFileModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/files\/FutureFileModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Future, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/files\/FutureFileModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Future, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/files\/FutureFileModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Future, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/files\/FutureFileModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/files\/FutureFileModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/files\/FutureFileModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Future, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/files\/FutureFileModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Future, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/files\/FutureFileModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Future, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/files\/FutureFileModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Future, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/files\/FutureFileModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Future, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/files\/FutureFileModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Future, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/files\/FutureFileModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Future[A]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/files\/FutureFileModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/files\/FutureFileModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/files\/FutureFileModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/files\/FutureFileModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/files\/FutureFileModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Future, E, A], ifEnd: Future[A]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/files\/FutureFileModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/files\/FutureFileModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/files\/FutureFileModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Future[Option[E]]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/files\/FutureFileModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Future[Option[E]]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/files\/FutureFileModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/files\/FutureFileModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Future[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/files\/FutureFileModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/files\/FutureFileModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/files\/FutureFileModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/files\/FutureFileModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/files\/FutureFileModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/files\/FutureFileModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/files\/FutureFileModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/files\/FutureFileModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/files\/FutureFileModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/files\/FutureFileModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/files\/FutureFileModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Future[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/files\/FutureFileModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/files\/FutureFileModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Future, E2]): Enumeratee[Future, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/files\/FutureFileModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/files\/FutureFileModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Future, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/files\/FutureFileModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Future, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/files\/FutureFileModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/files\/FutureFileModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Future, O, I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/files\/FutureFileModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Future[Boolean]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/files\/FutureFileModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/files\/FutureFileModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/files\/FutureFileModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Future[Boolean]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/files\/FutureFileModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/files\/FutureFileModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/files\/FutureFileModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Future[Boolean]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/files\/FutureFileModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/files\/FutureFileModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/files\/FutureFileModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Future, I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/files\/FutureFileModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Future[I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/files\/FutureFileModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/files\/FutureFileModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/FutureFileModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/FutureFileModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/FutureFileModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/FutureFileModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/FutureFileModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/FutureFileModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/FutureFileModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/FutureFileModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/FutureFileModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/FutureFileModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/FutureFileModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/FutureFileModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/FutureFileModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/FutureFileModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/FutureFileModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/FutureFileModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/FutureFileModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/FutureFileModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/FutureFileModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ec", "tail" : "(): ExecutionContext", "member" : "io.iteratee.modules.FutureModule.ec", "link" : "io\/iteratee\/files\/FutureFileModule.html#ec:scala.concurrent.ExecutionContext", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/iteratee\/files\/FutureFileModule.html", "kind" : "trait"}, {"name" : "io.iteratee.files.NonSuspendableFileModule", "members_trait" : [{"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[F, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[F, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[F, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[F, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[F, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[F, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[F, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.NonSuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[F, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[F, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[F, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[F, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: F[R])(f: (R) ⇒ F[A])(F: MonadError[F, Throwable]): F[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/NonSuspendableFileModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "File operations for contexts that are not suspendable.", "object" : "io\/iteratee\/files\/NonSuspendableFileModule$.html", "members_object" : [{"label" : "apply", "tail" : "(F: MonadError[F, Throwable]): FileModule[F]", "member" : "io.iteratee.files.NonSuspendableFileModule.apply", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#apply[F[_]](implicitF:cats.MonadError[F,Throwable]):io.iteratee.files.FileModule[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/NonSuspendableFileModule$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/iteratee\/files\/NonSuspendableFileModule.html", "kind" : "trait"}, {"name" : "io.iteratee.files.SuspendableFileModule", "members_trait" : [{"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[F, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[F, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[F, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[F, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[F, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[F, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[F, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[F, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[F, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[F, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[F, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: F[R])(f: (R) ⇒ F[A])(F: MonadError[F, Throwable]): F[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/SuspendableFileModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): F[A]", "member" : "io.iteratee.files.SuspendableFileModule.captureEffect", "link" : "io\/iteratee\/files\/SuspendableFileModule.html#captureEffect[A](a:=>A):F[A]", "kind" : "abstract def"}], "shortDescription" : "File operations for contexts that are suspendable and for which recursivemonadic binding is stack safe.", "trait" : "io\/iteratee\/files\/SuspendableFileModule.html", "kind" : "trait"}, {"name" : "io.iteratee.files.try_", "shortDescription" : "", "object" : "io\/iteratee\/files\/try_$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Try, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/try_$.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Try, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/try_$.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Try, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/try_$.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Try, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/try_$.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Try, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/try_$.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Try, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/try_$.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Try, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.NonSuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/try_$.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Try, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/try_$.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Try, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/try_$.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Try, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/try_$.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Try, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/try_$.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Try[R])(f: (R) ⇒ Try[A])(F: MonadError[Try, Throwable]): Try[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/try_$.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[Try, Throwable]", "member" : "io.iteratee.modules.TryModule.F", "link" : "io\/iteratee\/files\/try_$.html#F:cats.MonadError[scala.util.Try,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.TryModule.M", "link" : "io\/iteratee\/files\/try_$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/files\/try_$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Try[Unit]): Iteratee[Try, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/files\/try_$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/files\/try_$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Try, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/files\/try_$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Try, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/files\/try_$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/files\/try_$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Try, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/files\/try_$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Try, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/files\/try_$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Try, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/files\/try_$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/files\/try_$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/files\/try_$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/files\/try_$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/files\/try_$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/files\/try_$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/files\/try_$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Try, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/files\/try_$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/files\/try_$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/files\/try_$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/files\/try_$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/files\/try_$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/files\/try_$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/files\/try_$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Try, E, A], ifEnd: Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/files\/try_$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/files\/try_$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/files\/try_$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/files\/try_$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/files\/try_$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/files\/try_$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/files\/try_$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/files\/try_$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/files\/try_$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/files\/try_$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/files\/try_$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/files\/try_$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/files\/try_$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/files\/try_$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/files\/try_$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/files\/try_$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/files\/try_$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/files\/try_$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/files\/try_$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Try, E2]): Enumeratee[Try, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/files\/try_$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/files\/try_$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/files\/try_$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Try, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/files\/try_$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/files\/try_$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Try, O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/files\/try_$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/files\/try_$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/files\/try_$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/files\/try_$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/files\/try_$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/files\/try_$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/files\/try_$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/files\/try_$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/files\/try_$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/files\/try_$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Try, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/files\/try_$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Try[I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/files\/try_$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/files\/try_$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/try_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/try_$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/try_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/try_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/try_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/try_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/try_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/try_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/try_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/try_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/try_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/try_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/try_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/try_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/try_$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/try_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/try_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/try_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/try_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.files.TryFileModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Try, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/files\/TryFileModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Try, Array[Byte], Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeBytes", "link" : "io\/iteratee\/files\/TryFileModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Try, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/files\/TryFileModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Try, String, Unit]", "member" : "io.iteratee.files.NonSuspendableFileModule.writeLines", "link" : "io\/iteratee\/files\/TryFileModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Try, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/files\/TryFileModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Try, File]", "member" : "io.iteratee.files.NonSuspendableFileModule.listFiles", "link" : "io\/iteratee\/files\/TryFileModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Try, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.NonSuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/files\/TryFileModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Try, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/files\/TryFileModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Try, Array[Byte]]", "member" : "io.iteratee.files.NonSuspendableFileModule.readBytes", "link" : "io\/iteratee\/files\/TryFileModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Try, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/files\/TryFileModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Try, String]", "member" : "io.iteratee.files.NonSuspendableFileModule.readLines", "link" : "io\/iteratee\/files\/TryFileModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Try[R])(f: (R) ⇒ Try[A])(F: MonadError[Try, Throwable]): Try[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/files\/TryFileModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[Try, Throwable]", "member" : "io.iteratee.modules.TryModule.F", "link" : "io\/iteratee\/files\/TryFileModule.html#F:cats.MonadError[scala.util.Try,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.TryModule.M", "link" : "io\/iteratee\/files\/TryFileModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/files\/TryFileModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Try[Unit]): Iteratee[Try, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/files\/TryFileModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/files\/TryFileModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Try, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/files\/TryFileModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Try, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/files\/TryFileModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/files\/TryFileModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Try, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/files\/TryFileModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Try, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/files\/TryFileModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Try, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/files\/TryFileModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/files\/TryFileModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/files\/TryFileModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/files\/TryFileModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/files\/TryFileModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/files\/TryFileModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/files\/TryFileModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Try, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/files\/TryFileModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/files\/TryFileModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/files\/TryFileModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/files\/TryFileModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/files\/TryFileModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/files\/TryFileModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/files\/TryFileModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Try, E, A], ifEnd: Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/files\/TryFileModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/files\/TryFileModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/files\/TryFileModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/files\/TryFileModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/files\/TryFileModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/files\/TryFileModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/files\/TryFileModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/files\/TryFileModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/files\/TryFileModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/files\/TryFileModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/files\/TryFileModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/files\/TryFileModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/files\/TryFileModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/files\/TryFileModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/files\/TryFileModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/files\/TryFileModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/files\/TryFileModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/files\/TryFileModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/files\/TryFileModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Try, E2]): Enumeratee[Try, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/files\/TryFileModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/files\/TryFileModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/files\/TryFileModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Try, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/files\/TryFileModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/files\/TryFileModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Try, O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/files\/TryFileModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/files\/TryFileModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/files\/TryFileModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/files\/TryFileModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/files\/TryFileModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/files\/TryFileModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/files\/TryFileModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/files\/TryFileModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/files\/TryFileModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/files\/TryFileModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Try, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/files\/TryFileModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Try[I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/files\/TryFileModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/files\/TryFileModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/files\/TryFileModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/files\/TryFileModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/files\/TryFileModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/files\/TryFileModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/files\/TryFileModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/files\/TryFileModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/files\/TryFileModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/TryFileModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/TryFileModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/files\/TryFileModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/files\/TryFileModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/files\/TryFileModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/files\/TryFileModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/files\/TryFileModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/files\/TryFileModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/files\/TryFileModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/files\/TryFileModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/files\/TryFileModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/files\/TryFileModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/files\/TryFileModule.html", "kind" : "trait"}], "io.iteratee.internal" : [{"name" : "io.iteratee.internal.Step", "shortDescription" : "Represents the current state of an io.iteratee.Iteratee.", "object" : "io\/iteratee\/internal\/Step$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/internal\/Step.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/internal\/Step.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/internal\/Step.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/internal\/Step.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/internal\/Step.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/internal\/Step.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/internal\/Step.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/internal\/Step.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/internal\/Step.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/internal\/Step.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/internal\/Step.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/internal\/Step.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/internal\/Step.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/internal\/Step.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/internal\/Step.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/internal\/Step.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/internal\/Step.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/internal\/Step.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/internal\/Step.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "zip", "tail" : "(other: Step[F, E, B]): Step[F, E, (A, B)]", "member" : "io.iteratee.internal.Step.zip", "link" : "io\/iteratee\/internal\/Step.html#zip[B](other:io.iteratee.internal.Step[F,E,B]):io.iteratee.internal.Step[F,E,(A,B)]", "kind" : "abstract def"}, {"label" : "bind", "tail" : "(f: (A) ⇒ F[Step[F, E, B]])(M: Monad[F]): F[Step[F, E, B]]", "member" : "io.iteratee.internal.Step.bind", "link" : "io\/iteratee\/internal\/Step.html#bind[B](f:A=>F[io.iteratee.internal.Step[F,E,B]])(implicitM:cats.Monad[F]):F[io.iteratee.internal.Step[F,E,B]]", "kind" : "abstract def"}, {"label" : "mapI", "tail" : "(f: FunctionK[F, G])(arg0: Applicative[G]): Step[G, E, A]", "member" : "io.iteratee.internal.Step.mapI", "link" : "io\/iteratee\/internal\/Step.html#mapI[G[_]](f:cats.arrow.FunctionK[F,G])(implicitevidence$1:cats.Applicative[G]):io.iteratee.internal.Step[G,E,A]", "kind" : "abstract def"}, {"label" : "contramap", "tail" : "(f: (E2) ⇒ E): Step[F, E2, A]", "member" : "io.iteratee.internal.Step.contramap", "link" : "io\/iteratee\/internal\/Step.html#contramap[E2](f:E2=>E):io.iteratee.internal.Step[F,E2,A]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Step[F, E, B]", "member" : "io.iteratee.internal.Step.map", "link" : "io\/iteratee\/internal\/Step.html#map[B](f:A=>B):io.iteratee.internal.Step[F,E,B]", "kind" : "abstract def"}, {"label" : "feedNonEmpty", "tail" : "(chunk: Seq[E]): F[Step[F, E, A]]", "member" : "io.iteratee.internal.Step.feedNonEmpty", "link" : "io\/iteratee\/internal\/Step.html#feedNonEmpty(chunk:Seq[E]):F[io.iteratee.internal.Step[F,E,A]]", "kind" : "abstract def"}, {"label" : "feedEl", "tail" : "(e: E): F[Step[F, E, A]]", "member" : "io.iteratee.internal.Step.feedEl", "link" : "io\/iteratee\/internal\/Step.html#feedEl(e:E):F[io.iteratee.internal.Step[F,E,A]]", "kind" : "abstract def"}, {"label" : "feed", "tail" : "(chunk: Seq[E]): F[Step[F, E, A]]", "member" : "io.iteratee.internal.Step.feed", "link" : "io\/iteratee\/internal\/Step.html#feed(chunk:Seq[E]):F[io.iteratee.internal.Step[F,E,A]]", "kind" : "abstract def"}, {"label" : "run", "tail" : "(): F[A]", "member" : "io.iteratee.internal.Step.run", "link" : "io\/iteratee\/internal\/Step.html#run:F[A]", "kind" : "abstract def"}, {"label" : "isDone", "tail" : "(): Boolean", "member" : "io.iteratee.internal.Step.isDone", "link" : "io\/iteratee\/internal\/Step.html#isDone:Boolean", "kind" : "abstract def"}, {"label" : "fold", "tail" : "(ifCont: ((NonEmptyList[E]) ⇒ F[Step[F, E, A]]) ⇒ Z, ifDone: (A, List[E]) ⇒ Z): Z", "member" : "io.iteratee.internal.Step.fold", "link" : "io\/iteratee\/internal\/Step.html#fold[Z](ifCont:(cats.data.NonEmptyList[E]=>F[io.iteratee.internal.Step[F,E,A]])=>Z,ifDone:(A,List[E])=>Z):Z", "kind" : "abstract def"}], "members_object" : [{"label" : "tailRecM", "tail" : "(f: (A) ⇒ F[Step[F, E, Either[A, B]]])(s: Step[F, E, Either[A, B]])(arg0: Monad[F]): Step[F, E, B]", "member" : "io.iteratee.internal.Step.tailRecM", "link" : "io\/iteratee\/internal\/Step$.html#tailRecM[F[_],E,A,B](f:A=>F[io.iteratee.internal.Step[F,E,Either[A,B]]])(s:io.iteratee.internal.Step[F,E,Either[A,B]])(implicitevidence$11:cats.Monad[F]):io.iteratee.internal.Step[F,E,B]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(F: Applicative[F]): Step[F, E, Boolean]", "member" : "io.iteratee.internal.Step.isEnd", "link" : "io\/iteratee\/internal\/Step$.html#isEnd[F[_],E](implicitF:cats.Applicative[F]):io.iteratee.internal.Step[F,E,Boolean]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean)(arg0: Applicative[F]): Step[F, E, Unit]", "member" : "io.iteratee.internal.Step.dropWhile", "link" : "io\/iteratee\/internal\/Step$.html#dropWhile[F[_],E](p:E=>Boolean)(implicitevidence$10:cats.Applicative[F]):io.iteratee.internal.Step[F,E,Unit]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int)(F: Applicative[F]): Step[F, E, Unit]", "member" : "io.iteratee.internal.Step.drop", "link" : "io\/iteratee\/internal\/Step$.html#drop[F[_],E](n:Int)(implicitF:cats.Applicative[F]):io.iteratee.internal.Step[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean)(arg0: Applicative[F]): Step[F, E, Vector[E]]", "member" : "io.iteratee.internal.Step.takeWhile", "link" : "io\/iteratee\/internal\/Step$.html#takeWhile[F[_],E](p:E=>Boolean)(implicitevidence$9:cats.Applicative[F]):io.iteratee.internal.Step[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int)(arg0: Applicative[F]): Step[F, E, Vector[E]]", "member" : "io.iteratee.internal.Step.take", "link" : "io\/iteratee\/internal\/Step$.html#take[F[_],E](n:Int)(implicitevidence$8:cats.Applicative[F]):io.iteratee.internal.Step[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(F: Applicative[F], S: Semigroup[A]): Step[F, E, Option[A]]", "member" : "io.iteratee.internal.Step.foldMapOption", "link" : "io\/iteratee\/internal\/Step$.html#foldMapOption[F[_],E,A](f:E=>A)(implicitF:cats.Applicative[F],implicitS:cats.Semigroup[A]):io.iteratee.internal.Step[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(F: Applicative[F], M: Monoid[A]): Step[F, E, A]", "member" : "io.iteratee.internal.Step.foldMap", "link" : "io\/iteratee\/internal\/Step$.html#foldMap[F[_],E,A](f:E=>A)(implicitF:cats.Applicative[F],implicitM:cats.Monoid[A]):io.iteratee.internal.Step[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(F: Applicative[F], M: Monoid[E]): Step[F, E, E]", "member" : "io.iteratee.internal.Step.sum", "link" : "io\/iteratee\/internal\/Step$.html#sum[F[_],E](implicitF:cats.Applicative[F],implicitM:cats.Monoid[E]):io.iteratee.internal.Step[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(arg0: Applicative[F]): Step[F, A, Long]", "member" : "io.iteratee.internal.Step.length", "link" : "io\/iteratee\/internal\/Step$.html#length[F[_],A](implicitevidence$7:cats.Applicative[F]):io.iteratee.internal.Step[F,A,Long]", "kind" : "final def"}, {"label" : "peek", "tail" : "(F: Applicative[F]): Step[F, E, Option[E]]", "member" : "io.iteratee.internal.Step.peek", "link" : "io\/iteratee\/internal\/Step$.html#peek[F[_],E](implicitF:cats.Applicative[F]):io.iteratee.internal.Step[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(F: Applicative[F]): Step[F, E, Option[E]]", "member" : "io.iteratee.internal.Step.head", "link" : "io\/iteratee\/internal\/Step$.html#head[F[_],E](implicitF:cats.Applicative[F]):io.iteratee.internal.Step[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(F: Applicative[F], M: MonoidK[C], C: Applicative[C]): Step[F, E, C[E]]", "member" : "io.iteratee.internal.Step.consumeIn", "link" : "io\/iteratee\/internal\/Step$.html#consumeIn[F[_],E,C[_]](implicitF:cats.Applicative[F],implicitM:cats.MonoidK[C],implicitC:cats.Applicative[C]):io.iteratee.internal.Step[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(arg0: Applicative[F]): Step[F, A, Vector[A]]", "member" : "io.iteratee.internal.Step.consume", "link" : "io\/iteratee\/internal\/Step$.html#consume[F[_],A](implicitevidence$6:cats.Applicative[F]):io.iteratee.internal.Step[F,A,Vector[A]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ F[A])(F: Monad[F]): Step[F, E, A]", "member" : "io.iteratee.internal.Step.foldM", "link" : "io\/iteratee\/internal\/Step$.html#foldM[F[_],E,A](init:A)(f:(A,E)=>F[A])(implicitF:cats.Monad[F]):io.iteratee.internal.Step[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A)(F: Applicative[F]): Step[F, E, A]", "member" : "io.iteratee.internal.Step.fold", "link" : "io\/iteratee\/internal\/Step$.html#fold[F[_],E,A](init:A)(f:(A,E)=>A)(implicitF:cats.Applicative[F]):io.iteratee.internal.Step[F,E,A]", "kind" : "final def"}, {"label" : "joinI", "tail" : "(step: Step[F, A, Step[F, B, C]])(F: Monad[F]): F[Step[F, A, C]]", "member" : "io.iteratee.internal.Step.joinI", "link" : "io\/iteratee\/internal\/Step$.html#joinI[F[_],A,B,C](step:io.iteratee.internal.Step[F,A,io.iteratee.internal.Step[F,B,C]])(implicitF:cats.Monad[F]):F[io.iteratee.internal.Step[F,A,C]]", "kind" : "final def"}, {"label" : "liftMEval", "tail" : "(fa: Eval[F[A]])(F: Monad[F]): F[Step[F, E, A]]", "member" : "io.iteratee.internal.Step.liftMEval", "link" : "io\/iteratee\/internal\/Step$.html#liftMEval[F[_],E,A](fa:cats.Eval[F[A]])(implicitF:cats.Monad[F]):F[io.iteratee.internal.Step[F,E,A]]", "kind" : "final def"}, {"label" : "liftM", "tail" : "(fa: F[A])(F: Monad[F]): F[Step[F, E, A]]", "member" : "io.iteratee.internal.Step.liftM", "link" : "io\/iteratee\/internal\/Step$.html#liftM[F[_],E,A](fa:F[A])(implicitF:cats.Monad[F]):F[io.iteratee.internal.Step[F,E,A]]", "kind" : "final def"}, {"label" : "doneWithLeftovers", "tail" : "(value: A, remaining: List[E])(arg0: Applicative[F]): Step[F, E, A]", "member" : "io.iteratee.internal.Step.doneWithLeftovers", "link" : "io\/iteratee\/internal\/Step$.html#doneWithLeftovers[F[_],E,A](value:A,remaining:List[E])(implicitevidence$5:cats.Applicative[F]):io.iteratee.internal.Step[F,E,A]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A)(arg0: Applicative[F]): Step[F, E, A]", "member" : "io.iteratee.internal.Step.done", "link" : "io\/iteratee\/internal\/Step$.html#done[F[_],E,A](value:A)(implicitevidence$4:cats.Applicative[F]):io.iteratee.internal.Step[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(onInput: (NonEmptyList[E]) ⇒ F[Step[F, E, A]], onEnd: F[A])(F: Applicative[F]): Step[F, E, A]", "member" : "io.iteratee.internal.Step.cont", "link" : "io\/iteratee\/internal\/Step$.html#cont[F[_],E,A](onInput:cats.data.NonEmptyList[E]=>F[io.iteratee.internal.Step[F,E,A]],onEnd:F[A])(implicitF:cats.Applicative[F]):io.iteratee.internal.Step[F,E,A]", "kind" : "final def"}, {"label" : "Cont", "tail" : "", "member" : "io.iteratee.internal.Step.Cont", "link" : "io\/iteratee\/internal\/Step$.html#Cont", "kind" : "object"}, {"label" : "Cont", "tail" : "", "member" : "io.iteratee.internal.Step.Cont", "link" : "io\/iteratee\/internal\/Step$.html#Cont[F[_],E,A]extendsStep.BaseCont[F,E,A]", "kind" : "abstract class"}, {"label" : "Done", "tail" : "", "member" : "io.iteratee.internal.Step.Done", "link" : "io\/iteratee\/internal\/Step$.html#Done[F[_],E,A]extendsStep[F,E,A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/internal\/Step$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/internal\/Step$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/internal\/Step$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/internal\/Step$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/internal\/Step$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/internal\/Step$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/internal\/Step$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/internal\/Step$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/internal\/Step$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/internal\/Step$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/internal\/Step$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/internal\/Step$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/internal\/Step$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/internal\/Step$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/internal\/Step$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/internal\/Step$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/internal\/Step$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/internal\/Step$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/internal\/Step$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/iteratee\/internal\/Step.html", "kind" : "class"}], "io.iteratee" : [{"name" : "io.iteratee.Enumeratee", "shortDescription" : "", "object" : "io\/iteratee\/Enumeratee$.html", "members_class" : [{"label" : "contramap", "tail" : "(f: (J) ⇒ O)(F: Monad[F]): Enumeratee[F, J, I]", "member" : "io.iteratee.Enumeratee.contramap", "link" : "io\/iteratee\/Enumeratee.html#contramap[J](f:J=>O)(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,J,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (I) ⇒ J)(F: Monad[F]): Enumeratee[F, O, J]", "member" : "io.iteratee.Enumeratee.map", "link" : "io\/iteratee\/Enumeratee.html#map[J](f:I=>J)(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,O,J]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Enumeratee[F, J, O])(F: Monad[F]): Enumeratee[F, J, I]", "member" : "io.iteratee.Enumeratee.compose", "link" : "io\/iteratee\/Enumeratee.html#compose[J](other:io.iteratee.Enumeratee[F,J,O])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,J,I]", "kind" : "final def"}, {"label" : "andThen", "tail" : "(other: Enumeratee[F, I, J])(F: Monad[F]): Enumeratee[F, O, J]", "member" : "io.iteratee.Enumeratee.andThen", "link" : "io\/iteratee\/Enumeratee.html#andThen[J](other:io.iteratee.Enumeratee[F,I,J])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,O,J]", "kind" : "final def"}, {"label" : "wrap", "tail" : "(enum: Enumerator[F, O])(F: FlatMap[F]): Enumerator[F, I]", "member" : "io.iteratee.Enumeratee.wrap", "link" : "io\/iteratee\/Enumeratee.html#wrap(enum:io.iteratee.Enumerator[F,O])(implicitF:cats.FlatMap[F]):io.iteratee.Enumerator[F,I]", "kind" : "final def"}, {"member" : "io.iteratee.Enumeratee#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Enumeratee.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Enumeratee.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Enumeratee.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Enumeratee.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Enumeratee.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Enumeratee.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Enumeratee.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumeratee.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumeratee.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumeratee.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Enumeratee.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Enumeratee.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Enumeratee.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Enumeratee.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Enumeratee.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Enumeratee.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Enumeratee.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Enumeratee.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Enumeratee.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(step: Step[F, I, A]): F[Step[F, O, Step[F, I, A]]]", "member" : "io.iteratee.Enumeratee.apply", "link" : "io\/iteratee\/Enumeratee.html#apply[A](step:io.iteratee.internal.Step[F,I,A]):F[io.iteratee.internal.Step[F,O,io.iteratee.internal.Step[F,I,A]]]", "kind" : "abstract def"}], "members_object" : [{"label" : "EffectfulLoop", "tail" : "", "member" : "io.iteratee.Enumeratee.EffectfulLoop", "link" : "io\/iteratee\/Enumeratee$.html#EffectfulLoop[F[_],O,I]extendsEnumeratee[F,O,I]", "kind" : "abstract class"}, {"label" : "PureLoop", "tail" : "", "member" : "io.iteratee.Enumeratee.PureLoop", "link" : "io\/iteratee\/Enumeratee$.html#PureLoop[F[_],O,I]extendsEnumeratee[F,O,I]", "kind" : "abstract class"}, {"label" : "intersperse", "tail" : "(delim: E)(F: Applicative[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.intersperse", "link" : "io\/iteratee\/Enumeratee$.html#intersperse[F[_],E](delim:E)(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[F, E2])(F: Monad[F]): Enumeratee[F, E1, (E1, E2)]", "member" : "io.iteratee.Enumeratee.cross", "link" : "io\/iteratee\/Enumeratee$.html#cross[F[_],E1,E2](e2:io.iteratee.Enumerator[F,E2])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean)(F: Monad[F]): Enumeratee[F, E, Vector[E]]", "member" : "io.iteratee.Enumeratee.splitOn", "link" : "io\/iteratee\/Enumeratee$.html#splitOn[F[_],E](p:E=>Boolean)(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int)(arg0: Monad[F]): Enumeratee[F, E, Vector[E]]", "member" : "io.iteratee.Enumeratee.grouped", "link" : "io\/iteratee\/Enumeratee$.html#grouped[F[_],E](n:Int)(implicitevidence$1:cats.Monad[F]):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(F: Applicative[F]): Enumeratee[F, E, (E, Long)]", "member" : "io.iteratee.Enumeratee.zipWithIndex", "link" : "io\/iteratee\/Enumeratee$.html#zipWithIndex[F[_],E](implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(F: Applicative[F], E: Eq[E]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.uniq", "link" : "io\/iteratee\/Enumeratee$.html#uniq[F[_],E](implicitF:cats.Applicative[F],implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[F, O, I])(F: Monad[F]): Enumeratee[F, O, I]", "member" : "io.iteratee.Enumeratee.sequenceI", "link" : "io\/iteratee\/Enumeratee$.html#sequenceI[F[_],O,I](iteratee:io.iteratee.Iteratee[F,O,I])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ F[Boolean])(F: Monad[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.filterM", "link" : "io\/iteratee\/Enumeratee$.html#filterM[F[_],E](p:E=>F[Boolean])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean)(F: Applicative[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.filter", "link" : "io\/iteratee\/Enumeratee$.html#filter[F[_],E](p:E=>Boolean)(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I])(F: Applicative[F]): Enumeratee[F, O, I]", "member" : "io.iteratee.Enumeratee.collect", "link" : "io\/iteratee\/Enumeratee$.html#collect[F[_],O,I](pf:PartialFunction[O,I])(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ F[Boolean])(F: Monad[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.dropWhileM", "link" : "io\/iteratee\/Enumeratee$.html#dropWhileM[F[_],E](p:E=>F[Boolean])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean)(F: Applicative[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.dropWhile", "link" : "io\/iteratee\/Enumeratee$.html#dropWhile[F[_],E](p:E=>Boolean)(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long)(F: Applicative[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.drop", "link" : "io\/iteratee\/Enumeratee$.html#drop[F[_],E](n:Long)(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ F[Boolean])(F: Monad[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.takeWhileM", "link" : "io\/iteratee\/Enumeratee$.html#takeWhileM[F[_],E](p:E=>F[Boolean])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean)(F: Applicative[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.takeWhile", "link" : "io\/iteratee\/Enumeratee$.html#takeWhile[F[_],E](p:E=>Boolean)(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long)(F: Applicative[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.take", "link" : "io\/iteratee\/Enumeratee$.html#take[F[_],E](n:Long)(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[F, I])(F: Monad[F]): Enumeratee[F, O, I]", "member" : "io.iteratee.Enumeratee.flatMap", "link" : "io\/iteratee\/Enumeratee$.html#flatMap[F[_],O,I](f:O=>io.iteratee.Enumerator[F,I])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ F[I])(F: Monad[F]): Enumeratee[F, O, I]", "member" : "io.iteratee.Enumeratee.flatMapM", "link" : "io\/iteratee\/Enumeratee$.html#flatMapM[F[_],O,I](f:O=>F[I])(implicitF:cats.Monad[F]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I)(F: Applicative[F]): Enumeratee[F, O, I]", "member" : "io.iteratee.Enumeratee.map", "link" : "io\/iteratee\/Enumeratee$.html#map[F[_],O,I](f:O=>I)(implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "identity", "tail" : "(F: Applicative[F]): Enumeratee[F, E, E]", "member" : "io.iteratee.Enumeratee.identity", "link" : "io\/iteratee\/Enumeratee$.html#identity[F[_],E](implicitF:cats.Applicative[F]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "enumerateeInstance", "tail" : "(F: Monad[F]): Category[[β$0$, γ$1$]Enumeratee[F, β$0$, γ$1$]] with Profunctor[[β$2$, γ$3$]Enumeratee[F, β$2$, γ$3$]]", "member" : "io.iteratee.EnumerateeInstances.enumerateeInstance", "link" : "io\/iteratee\/Enumeratee$.html#enumerateeInstance[F[_]](implicitF:cats.Monad[F]):cats.arrow.Category[[β$0$,γ$1$]io.iteratee.Enumeratee[F,β$0$,γ$1$]]withcats.functor.Profunctor[[β$2$,γ$3$]io.iteratee.Enumeratee[F,β$2$,γ$3$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Enumeratee$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Enumeratee$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Enumeratee$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Enumeratee$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Enumeratee$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Enumeratee$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Enumeratee$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumeratee$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumeratee$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumeratee$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Enumeratee$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Enumeratee$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Enumeratee$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Enumeratee$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Enumeratee$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Enumeratee$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Enumeratee$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Enumeratee$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Enumeratee$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/iteratee\/Enumeratee.html", "kind" : "class"}, {"name" : "io.iteratee.EnumerateeModule", "members_trait" : [{"label" : "intersperse", "tail" : "(delim: E): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/EnumerateeModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[F, E2]): Enumeratee[F, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/EnumerateeModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[F, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/EnumerateeModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[F, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/EnumerateeModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[F, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/EnumerateeModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/EnumerateeModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[F, O, I]): Enumeratee[F, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/EnumerateeModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ F[Boolean]): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/EnumerateeModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/EnumerateeModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[F, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/EnumerateeModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ F[Boolean]): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/EnumerateeModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/EnumerateeModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/EnumerateeModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ F[Boolean]): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/EnumerateeModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/EnumerateeModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[F, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/EnumerateeModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[F, I]): Enumeratee[F, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/EnumerateeModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ F[I]): Enumeratee[F, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/EnumerateeModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[F, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/EnumerateeModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/EnumerateeModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/EnumerateeModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/EnumerateeModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/EnumerateeModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/EnumerateeModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/EnumerateeModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/EnumerateeModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumerateeModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumerateeModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumerateeModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/EnumerateeModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/EnumerateeModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/EnumerateeModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/EnumerateeModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/EnumerateeModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/EnumerateeModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/EnumerateeModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/EnumerateeModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/EnumerateeModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/EnumerateeModule.html", "kind" : "trait"}, {"name" : "io.iteratee.Enumerator", "shortDescription" : "", "object" : "io\/iteratee\/Enumerator$.html", "members_class" : [{"label" : "handleErrorWith", "tail" : "(f: (T) ⇒ Enumerator[F, E])(F: MonadError[F, T]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.handleErrorWith", "link" : "io\/iteratee\/Enumerator.html#handleErrorWith[T](f:T=>io.iteratee.Enumerator[F,E])(implicitF:cats.MonadError[F,T]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "ensureEval", "tail" : "(action: Eval[F[Unit]])(F: MonadError[F, T]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.ensureEval", "link" : "io\/iteratee\/Enumerator.html#ensureEval[T](action:cats.Eval[F[Unit]])(implicitF:cats.MonadError[F,T]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "ensure", "tail" : "(action: F[Unit])(F: MonadError[F, T]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.ensure", "link" : "io\/iteratee\/Enumerator.html#ensure[T](action:F[Unit])(implicitF:cats.MonadError[F,T]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "toVector", "tail" : "(F: Monad[F]): F[Vector[E]]", "member" : "io.iteratee.Enumerator.toVector", "link" : "io\/iteratee\/Enumerator.html#toVector(implicitF:cats.Monad[F]):F[Vector[E]]", "kind" : "final def"}, {"label" : "reducedM", "tail" : "(b: B)(f: (B, E) ⇒ F[B])(F: Monad[F]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.reducedM", "link" : "io\/iteratee\/Enumerator.html#reducedM[B](b:B)(f:(B,E)=>F[B])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "reduced", "tail" : "(b: B)(f: (B, E) ⇒ B)(F: Monad[F]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.reduced", "link" : "io\/iteratee\/Enumerator.html#reduced[B](b:B)(f:(B,E)=>B)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "bindM", "tail" : "(f: (E) ⇒ G[Enumerator[F, B]])(F: Monad[F], G: Monad[G]): F[G[Enumerator[F, B]]]", "member" : "io.iteratee.Enumerator.bindM", "link" : "io\/iteratee\/Enumerator.html#bindM[G[_],B](f:E=>G[io.iteratee.Enumerator[F,B]])(implicitF:cats.Monad[F],implicitG:cats.Monad[G]):F[G[io.iteratee.Enumerator[F,B]]]", "kind" : "final def"}, {"label" : "flatten", "tail" : "(M: Monad[F], ev: =:=[E, F[B]]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.flatten", "link" : "io\/iteratee\/Enumerator.html#flatten[B](implicitM:cats.Monad[F],implicitev:=:=[E,F[B]]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "append", "tail" : "(e2: Enumerator[F, E])(F: FlatMap[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.append", "link" : "io\/iteratee\/Enumerator.html#append(e2:io.iteratee.Enumerator[F,E])(implicitF:cats.FlatMap[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "prepend", "tail" : "(e: E)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.prepend", "link" : "io\/iteratee\/Enumerator.html#prepend(e:E)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.intersperse", "link" : "io\/iteratee\/Enumerator.html#intersperse(delim:E)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[F, E2])(F: Monad[F]): Enumerator[F, (E, E2)]", "member" : "io.iteratee.Enumerator.cross", "link" : "io\/iteratee\/Enumerator.html#cross[E2](e2:io.iteratee.Enumerator[F,E2])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,(E,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean)(F: Monad[F]): Enumerator[F, Vector[E]]", "member" : "io.iteratee.Enumerator.splitOn", "link" : "io\/iteratee\/Enumerator.html#splitOn(p:E=>Boolean)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int)(F: Monad[F]): Enumerator[F, Vector[E]]", "member" : "io.iteratee.Enumerator.grouped", "link" : "io\/iteratee\/Enumerator.html#grouped(n:Int)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(F: Monad[F]): Enumerator[F, (E, Long)]", "member" : "io.iteratee.Enumerator.zipWithIndex", "link" : "io\/iteratee\/Enumerator.html#zipWithIndex(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(F: Monad[F], E: Eq[E]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.uniq", "link" : "io\/iteratee\/Enumerator.html#uniq(implicitF:cats.Monad[F],implicitE:cats.kernel.Eq[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[F, E, B])(F: Monad[F]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.sequenceI", "link" : "io\/iteratee\/Enumerator.html#sequenceI[B](iteratee:io.iteratee.Iteratee[F,E,B])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ F[Boolean])(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.filterM", "link" : "io\/iteratee\/Enumerator.html#filterM(p:E=>F[Boolean])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.filter", "link" : "io\/iteratee\/Enumerator.html#filter(p:E=>Boolean)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[E, B])(F: Monad[F]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.collect", "link" : "io\/iteratee\/Enumerator.html#collect[B](pf:PartialFunction[E,B])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ F[Boolean])(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.dropWhileM", "link" : "io\/iteratee\/Enumerator.html#dropWhileM(p:E=>F[Boolean])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.dropWhile", "link" : "io\/iteratee\/Enumerator.html#dropWhile(p:E=>Boolean)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.drop", "link" : "io\/iteratee\/Enumerator.html#drop(n:Long)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ F[Boolean])(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.takeWhileM", "link" : "io\/iteratee\/Enumerator.html#takeWhileM(p:E=>F[Boolean])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.takeWhile", "link" : "io\/iteratee\/Enumerator.html#takeWhile(p:E=>Boolean)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.take", "link" : "io\/iteratee\/Enumerator.html#take(n:Long)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (E) ⇒ Enumerator[F, B])(F: Monad[F]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.flatMap", "link" : "io\/iteratee\/Enumerator.html#flatMap[B](f:E=>io.iteratee.Enumerator[F,B])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (E) ⇒ F[B])(F: Monad[F]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.flatMapM", "link" : "io\/iteratee\/Enumerator.html#flatMapM[B](f:E=>F[B])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (E) ⇒ B)(F: Monad[F]): Enumerator[F, B]", "member" : "io.iteratee.Enumerator.map", "link" : "io\/iteratee\/Enumerator.html#map[B](f:E=>B)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,B]", "kind" : "final def"}, {"label" : "into", "tail" : "(iteratee: Iteratee[F, E, A])(F: FlatMap[F]): F[A]", "member" : "io.iteratee.Enumerator.into", "link" : "io\/iteratee\/Enumerator.html#into[A](iteratee:io.iteratee.Iteratee[F,E,A])(implicitF:cats.FlatMap[F]):F[A]", "kind" : "final def"}, {"label" : "intoStep", "tail" : "(s: Step[F, E, A])(F: FlatMap[F]): F[A]", "member" : "io.iteratee.Enumerator.intoStep", "link" : "io\/iteratee\/Enumerator.html#intoStep[A](s:io.iteratee.internal.Step[F,E,A])(implicitF:cats.FlatMap[F]):F[A]", "kind" : "final def"}, {"label" : "through", "tail" : "(enumeratee: Enumeratee[F, E, I])(M: FlatMap[F]): Enumerator[F, I]", "member" : "io.iteratee.Enumerator.through", "link" : "io\/iteratee\/Enumerator.html#through[I](enumeratee:io.iteratee.Enumeratee[F,E,I])(implicitM:cats.FlatMap[F]):io.iteratee.Enumerator[F,I]", "kind" : "final def"}, {"member" : "io.iteratee.Enumerator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Enumerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Enumerator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Enumerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Enumerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Enumerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Enumerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Enumerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumerator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Enumerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Enumerator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Enumerator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Enumerator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Enumerator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Enumerator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Enumerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Enumerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Enumerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(s: Step[F, E, A]): F[Step[F, E, A]]", "member" : "io.iteratee.Enumerator.apply", "link" : "io\/iteratee\/Enumerator.html#apply[A](s:io.iteratee.internal.Step[F,E,A]):F[io.iteratee.internal.Step[F,E,A]]", "kind" : "abstract def"}], "members_object" : [{"label" : "StackUnsafe", "tail" : "", "member" : "io.iteratee.Enumerator.StackUnsafe", "link" : "io\/iteratee\/Enumerator$.html#StackUnsafe", "kind" : "object"}, {"label" : "generateM", "tail" : "(f: F[Option[E]])(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.generateM", "link" : "io\/iteratee\/Enumerator$.html#generateM[F[_],E](f:F[Option[E]])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ F[Option[E]])(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.iterateUntilM", "link" : "io\/iteratee\/Enumerator$.html#iterateUntilM[F[_],E](init:E)(f:E=>F[Option[E]])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E])(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.iterateUntil", "link" : "io\/iteratee\/Enumerator$.html#iterateUntil[F[_],E](init:E)(f:E=>Option[E])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ F[E])(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.iterateM", "link" : "io\/iteratee\/Enumerator$.html#iterateM[F[_],E](init:E)(f:E=>F[E])(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.iterate", "link" : "io\/iteratee\/Enumerator$.html#iterate[F[_],E](init:E)(f:E=>E)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E)(F: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.repeat", "link" : "io\/iteratee\/Enumerator$.html#repeat[F[_],E](e:E)(implicitF:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(xs: IndexedSeq[E], min: Int, max: Int)(F: Applicative[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.enumIndexedSeq", "link" : "io\/iteratee\/Enumerator$.html#enumIndexedSeq[F[_],E](xs:IndexedSeq[E],min:Int,max:Int)(implicitF:cats.Applicative[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(xs: Vector[E])(F: Applicative[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.enumVector", "link" : "io\/iteratee\/Enumerator$.html#enumVector[F[_],E](xs:Vector[E])(implicitF:cats.Applicative[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(xs: List[E])(F: Applicative[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.enumList", "link" : "io\/iteratee\/Enumerator$.html#enumList[F[_],E](xs:List[E])(implicitF:cats.Applicative[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(xs: Stream[E], chunkSize: Int)(arg0: Monad[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.enumStream", "link" : "io\/iteratee\/Enumerator$.html#enumStream[F[_],E](xs:Stream[E],chunkSize:Int)(implicitevidence$2:cats.Monad[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[T, E])(F: MonadError[F, T]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.enumEither", "link" : "io\/iteratee\/Enumerator$.html#enumEither[F[_],T,E](either:Either[T,E])(implicitF:cats.MonadError[F,T]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E)(arg0: Applicative[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.enumOne", "link" : "io\/iteratee\/Enumerator$.html#enumOne[F[_],E](e:E)(implicitevidence$1:cats.Applicative[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(f: F[B])(F: FlatMap[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.perform", "link" : "io\/iteratee\/Enumerator$.html#perform[F[_],E,B](f:F[B])(implicitF:cats.FlatMap[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(F: Applicative[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.empty", "link" : "io\/iteratee\/Enumerator$.html#empty[F[_],E](implicitF:cats.Applicative[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "fail", "tail" : "(e: T)(F: MonadError[F, T]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.fail", "link" : "io\/iteratee\/Enumerator$.html#fail[F[_],T,E](e:T)(implicitF:cats.MonadError[F,T]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftMEval", "tail" : "(fa: Eval[F[E]])(F: FlatMap[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.liftMEval", "link" : "io\/iteratee\/Enumerator$.html#liftMEval[F[_],E](fa:cats.Eval[F[E]])(implicitF:cats.FlatMap[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftM", "tail" : "(fa: F[E])(F: FlatMap[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.liftM", "link" : "io\/iteratee\/Enumerator$.html#liftM[F[_],E](fa:F[E])(implicitF:cats.FlatMap[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*)(F: Applicative[F]): Enumerator[F, E]", "member" : "io.iteratee.Enumerator.enumerate", "link" : "io\/iteratee\/Enumerator$.html#enumerate[F[_],E](xs:E*)(implicitF:cats.Applicative[F]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumeratorMonad", "tail" : "(M0: Monad[F]): Monad[[β$0$]Enumerator[F, β$0$]]", "member" : "io.iteratee.EnumeratorInstances.enumeratorMonad", "link" : "io\/iteratee\/Enumerator$.html#enumeratorMonad[F[_]](implicitM0:cats.Monad[F]):cats.Monad[[β$0$]io.iteratee.Enumerator[F,β$0$]]", "kind" : "implicit final def"}, {"label" : "enumeratorMonoid", "tail" : "(arg0: Monad[F]): Monoid[Enumerator[F, E]]", "member" : "io.iteratee.EnumeratorInstances.enumeratorMonoid", "link" : "io\/iteratee\/Enumerator$.html#enumeratorMonoid[F[_],E](implicitevidence$1:cats.Monad[F]):cats.Monoid[io.iteratee.Enumerator[F,E]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Enumerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Enumerator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Enumerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Enumerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Enumerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Enumerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Enumerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Enumerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Enumerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Enumerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Enumerator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Enumerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Enumerator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Enumerator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Enumerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Enumerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Enumerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/iteratee\/Enumerator.html", "kind" : "class"}, {"name" : "io.iteratee.EnumeratorErrorModule", "members_trait" : [{"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "enumEither", "tail" : "(either: Either[T, E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/EnumeratorErrorModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: T): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/EnumeratorErrorModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: F[Option[E]]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/EnumeratorErrorModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ F[Option[E]]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/EnumeratorErrorModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/EnumeratorErrorModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ F[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/EnumeratorErrorModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/EnumeratorErrorModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/EnumeratorErrorModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/EnumeratorErrorModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/EnumeratorErrorModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/EnumeratorErrorModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/EnumeratorErrorModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/EnumeratorErrorModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): (EnumeratorErrorModule.this)#PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/EnumeratorErrorModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/EnumeratorErrorModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/EnumeratorErrorModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: F[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/EnumeratorErrorModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/EnumeratorErrorModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/EnumeratorErrorModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/EnumeratorErrorModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/EnumeratorErrorModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/EnumeratorErrorModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/EnumeratorErrorModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/EnumeratorErrorModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumeratorErrorModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumeratorErrorModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumeratorErrorModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/EnumeratorErrorModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/EnumeratorErrorModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/EnumeratorErrorModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/EnumeratorErrorModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/EnumeratorErrorModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/EnumeratorErrorModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/EnumeratorErrorModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/EnumeratorErrorModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/EnumeratorErrorModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/EnumeratorErrorModule.html", "kind" : "trait"}, {"name" : "io.iteratee.EnumeratorModule", "members_trait" : [{"label" : "generateM", "tail" : "(f: F[Option[E]]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/EnumeratorModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ F[Option[E]]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/EnumeratorModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/EnumeratorModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ F[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/EnumeratorModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/EnumeratorModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/EnumeratorModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/EnumeratorModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/EnumeratorModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/EnumeratorModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/EnumeratorModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/EnumeratorModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): (EnumeratorModule.this)#PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/EnumeratorModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "empty", "tail" : "(): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/EnumeratorModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/EnumeratorModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: F[E]): Enumerator[F, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/EnumeratorModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/EnumeratorModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/EnumeratorModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/EnumeratorModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/EnumeratorModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/EnumeratorModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/EnumeratorModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/EnumeratorModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumeratorModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumeratorModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/EnumeratorModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/EnumeratorModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/EnumeratorModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/EnumeratorModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/EnumeratorModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/EnumeratorModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/EnumeratorModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/EnumeratorModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/EnumeratorModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/EnumeratorModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/EnumeratorModule.html", "kind" : "trait"}, {"name" : "io.iteratee.Iteratee", "shortDescription" : "An iteratee processes a stream of elements of type E and returns a value oftype F[A].", "object" : "io\/iteratee\/Iteratee$.html", "members_class" : [{"label" : "ensureEval", "tail" : "(action: Eval[F[Unit]])(F: MonadError[F, T]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.ensureEval", "link" : "io\/iteratee\/Iteratee.html#ensureEval[T](action:cats.Eval[F[Unit]])(implicitF:cats.MonadError[F,T]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "ensure", "tail" : "(action: F[Unit])(F: MonadError[F, T]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.ensure", "link" : "io\/iteratee\/Iteratee.html#ensure[T](action:F[Unit])(implicitF:cats.MonadError[F,T]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "discard", "tail" : "(F: Functor[F]): Iteratee[F, E, Unit]", "member" : "io.iteratee.Iteratee.discard", "link" : "io\/iteratee\/Iteratee.html#discard(implicitF:cats.Functor[F]):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "handleErrorWith", "tail" : "(f: (T) ⇒ Iteratee[F, E, A])(F: MonadError[F, T]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.handleErrorWith", "link" : "io\/iteratee\/Iteratee.html#handleErrorWith[T](f:T=>io.iteratee.Iteratee[F,E,A])(implicitF:cats.MonadError[F,T]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "zip", "tail" : "(other: Iteratee[F, E, B])(F: Applicative[F]): Iteratee[F, E, (A, B)]", "member" : "io.iteratee.Iteratee.zip", "link" : "io\/iteratee\/Iteratee.html#zip[B](other:io.iteratee.Iteratee[F,E,B])(implicitF:cats.Applicative[F]):io.iteratee.Iteratee[F,E,(A,B)]", "kind" : "final def"}, {"label" : "up", "tail" : "(G: Applicative[G], F: Comonad[F], F0: Applicative[F]): Iteratee[G, E, A]", "member" : "io.iteratee.Iteratee.up", "link" : "io\/iteratee\/Iteratee.html#up[G[_]](implicitG:cats.Applicative[G],implicitF:cats.Comonad[F],implicitF0:cats.Applicative[F]):io.iteratee.Iteratee[G,E,A]", "kind" : "final def"}, {"label" : "mapI", "tail" : "(f: FunctionK[F, G])(arg0: Applicative[G], F: Applicative[F]): Iteratee[G, E, A]", "member" : "io.iteratee.Iteratee.mapI", "link" : "io\/iteratee\/Iteratee.html#mapI[G[_]](f:cats.arrow.FunctionK[F,G])(implicitevidence$1:cats.Applicative[G],implicitF:cats.Applicative[F]):io.iteratee.Iteratee[G,E,A]", "kind" : "final def"}, {"label" : "through", "tail" : "(enumeratee: Enumeratee[F, O, E])(F: Monad[F]): Iteratee[F, O, A]", "member" : "io.iteratee.Iteratee.through", "link" : "io\/iteratee\/Iteratee.html#through[O](enumeratee:io.iteratee.Enumeratee[F,O,E])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,O,A]", "kind" : "final def"}, {"label" : "contramap", "tail" : "(f: (E2) ⇒ E)(F: Functor[F]): Iteratee[F, E2, A]", "member" : "io.iteratee.Iteratee.contramap", "link" : "io\/iteratee\/Iteratee.html#contramap[E2](f:E2=>E)(implicitF:cats.Functor[F]):io.iteratee.Iteratee[F,E2,A]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (A) ⇒ Iteratee[F, E, B])(F: Monad[F]): Iteratee[F, E, B]", "member" : "io.iteratee.Iteratee.flatMap", "link" : "io\/iteratee\/Iteratee.html#flatMap[B](f:A=>io.iteratee.Iteratee[F,E,B])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,E,B]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (A) ⇒ F[B])(F: Monad[F]): Iteratee[F, E, B]", "member" : "io.iteratee.Iteratee.flatMapM", "link" : "io\/iteratee\/Iteratee.html#flatMapM[B](f:A=>F[B])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,E,B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B)(F: Functor[F]): Iteratee[F, E, B]", "member" : "io.iteratee.Iteratee.map", "link" : "io\/iteratee\/Iteratee.html#map[B](f:A=>B)(implicitF:cats.Functor[F]):io.iteratee.Iteratee[F,E,B]", "kind" : "final def"}, {"label" : "run", "tail" : "(F: Monad[F]): F[A]", "member" : "io.iteratee.Iteratee.run", "link" : "io\/iteratee\/Iteratee.html#run(implicitF:cats.Monad[F]):F[A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(ifCont: ((NonEmptyList[E]) ⇒ Iteratee[F, E, A]) ⇒ Z, ifDone: (A, List[E]) ⇒ Z)(F: Functor[F]): F[Z]", "member" : "io.iteratee.Iteratee.fold", "link" : "io\/iteratee\/Iteratee.html#fold[Z](ifCont:(cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A])=>Z,ifDone:(A,List[E])=>Z)(implicitF:cats.Functor[F]):F[Z]", "kind" : "final def"}, {"label" : "apply", "tail" : "(enumerator: Enumerator[F, E])(F: Monad[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.apply", "link" : "io\/iteratee\/Iteratee.html#apply(enumerator:io.iteratee.Enumerator[F,E])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "state", "tail" : ": F[Step[F, E, A]]", "member" : "io.iteratee.Iteratee.state", "link" : "io\/iteratee\/Iteratee.html#state:F[io.iteratee.internal.Step[F,E,A]]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Iteratee.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Iteratee.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Iteratee.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Iteratee.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Iteratee.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Iteratee.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Iteratee.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Iteratee.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Iteratee.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Iteratee.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Iteratee.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Iteratee.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Iteratee.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Iteratee.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Iteratee.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Iteratee.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Iteratee.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Iteratee.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Iteratee.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "foreachM", "tail" : "(f: (A) ⇒ F[Unit])(arg0: Monad[F]): Iteratee[F, A, Unit]", "member" : "io.iteratee.Iteratee.foreachM", "link" : "io\/iteratee\/Iteratee$.html#foreachM[F[_],A](f:A=>F[Unit])(implicitevidence$27:cats.Monad[F]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ Unit)(arg0: Applicative[F]): Iteratee[F, A, Unit]", "member" : "io.iteratee.Iteratee.foreach", "link" : "io\/iteratee\/Iteratee$.html#foreach[F[_],A](f:A=>Unit)(implicitevidence$26:cats.Applicative[F]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "def"}, {"label" : "isEnd", "tail" : "(arg0: Applicative[F]): Iteratee[F, E, Boolean]", "member" : "io.iteratee.Iteratee.isEnd", "link" : "io\/iteratee\/Iteratee$.html#isEnd[F[_],E](implicitevidence$25:cats.Applicative[F]):io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(arg0: Applicative[F], arg1: Semigroup[A]): Iteratee[F, E, Option[A]]", "member" : "io.iteratee.Iteratee.foldMapOption", "link" : "io\/iteratee\/Iteratee$.html#foldMapOption[F[_],E,A](f:E=>A)(implicitevidence$23:cats.Applicative[F],implicitevidence$24:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(arg0: Applicative[F], arg1: Monoid[A]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.foldMap", "link" : "io\/iteratee\/Iteratee$.html#foldMap[F[_],E,A](f:E=>A)(implicitevidence$21:cats.Applicative[F],implicitevidence$22:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(arg0: Applicative[F], arg1: Monoid[E]): Iteratee[F, E, E]", "member" : "io.iteratee.Iteratee.sum", "link" : "io\/iteratee\/Iteratee$.html#sum[F[_],E](implicitevidence$19:cats.Applicative[F],implicitevidence$20:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(arg0: Applicative[F]): Iteratee[F, E, Long]", "member" : "io.iteratee.Iteratee.length", "link" : "io\/iteratee\/Iteratee$.html#length[F[_],E](implicitevidence$18:cats.Applicative[F]):io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(arg0: Applicative[F]): Iteratee[F, A, List[A]]", "member" : "io.iteratee.Iteratee.reversed", "link" : "io\/iteratee\/Iteratee$.html#reversed[F[_],A](implicitevidence$17:cats.Applicative[F]):io.iteratee.Iteratee[F,A,List[A]]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean)(arg0: Applicative[F]): Iteratee[F, E, Unit]", "member" : "io.iteratee.Iteratee.dropWhile", "link" : "io\/iteratee\/Iteratee$.html#dropWhile[F[_],E](p:E=>Boolean)(implicitevidence$16:cats.Applicative[F]):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Int)(arg0: Applicative[F]): Iteratee[F, E, Unit]", "member" : "io.iteratee.Iteratee.drop", "link" : "io\/iteratee\/Iteratee$.html#drop[F[_],E](n:Int)(implicitevidence$15:cats.Applicative[F]):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (A) ⇒ Boolean)(arg0: Applicative[F]): Iteratee[F, A, Vector[A]]", "member" : "io.iteratee.Iteratee.takeWhile", "link" : "io\/iteratee\/Iteratee$.html#takeWhile[F[_],A](p:A=>Boolean)(implicitevidence$14:cats.Applicative[F]):io.iteratee.Iteratee[F,A,Vector[A]]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Int)(arg0: Applicative[F]): Iteratee[F, A, Vector[A]]", "member" : "io.iteratee.Iteratee.take", "link" : "io\/iteratee\/Iteratee$.html#take[F[_],A](n:Int)(implicitevidence$13:cats.Applicative[F]):io.iteratee.Iteratee[F,A,Vector[A]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(arg0: Applicative[F]): Iteratee[F, E, Option[E]]", "member" : "io.iteratee.Iteratee.peek", "link" : "io\/iteratee\/Iteratee$.html#peek[F[_],E](implicitevidence$12:cats.Applicative[F]):io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(arg0: Applicative[F]): Iteratee[F, E, Option[E]]", "member" : "io.iteratee.Iteratee.head", "link" : "io\/iteratee\/Iteratee$.html#head[F[_],E](implicitevidence$11:cats.Applicative[F]):io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(arg0: Applicative[F], arg1: Applicative[C], arg2: MonoidK[C]): Iteratee[F, A, C[A]]", "member" : "io.iteratee.Iteratee.consumeIn", "link" : "io\/iteratee\/Iteratee$.html#consumeIn[F[_],A,C[_]](implicitevidence$8:cats.Applicative[F],implicitevidence$9:cats.Applicative[C],implicitevidence$10:cats.MonoidK[C]):io.iteratee.Iteratee[F,A,C[A]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(arg0: Applicative[F]): Iteratee[F, A, Vector[A]]", "member" : "io.iteratee.Iteratee.consume", "link" : "io\/iteratee\/Iteratee$.html#consume[F[_],A](implicitevidence$7:cats.Applicative[F]):io.iteratee.Iteratee[F,A,Vector[A]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ F[A])(F: Monad[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.foldM", "link" : "io\/iteratee\/Iteratee$.html#foldM[F[_],E,A](init:A)(f:(A,E)=>F[A])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A)(arg0: Applicative[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.fold", "link" : "io\/iteratee\/Iteratee$.html#fold[F[_],E,A](init:A)(f:(A,E)=>A)(implicitevidence$6:cats.Applicative[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "joinI", "tail" : "(it: Iteratee[F, E, Step[F, I, B]])(F: Monad[F]): Iteratee[F, E, B]", "member" : "io.iteratee.Iteratee.joinI", "link" : "io\/iteratee\/Iteratee$.html#joinI[F[_],E,I,B](it:io.iteratee.Iteratee[F,E,io.iteratee.internal.Step[F,I,B]])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,E,B]", "kind" : "final def"}, {"label" : "identity", "tail" : "(arg0: Applicative[F]): Iteratee[F, E, Unit]", "member" : "io.iteratee.Iteratee.identity", "link" : "io\/iteratee\/Iteratee$.html#identity[F[_],E](implicitevidence$5:cats.Applicative[F]):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "fail", "tail" : "(e: T)(F: MonadError[F, T]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.fail", "link" : "io\/iteratee\/Iteratee$.html#fail[F[_],T,E,A](e:T)(implicitF:cats.MonadError[F,T]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "liftMEval", "tail" : "(fa: Eval[F[A]])(F: Monad[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.liftMEval", "link" : "io\/iteratee\/Iteratee$.html#liftMEval[F[_],E,A](fa:cats.Eval[F[A]])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "liftM", "tail" : "(fa: F[A])(F: Monad[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.liftM", "link" : "io\/iteratee\/Iteratee$.html#liftM[F[_],E,A](fa:F[A])(implicitF:cats.Monad[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fromStep", "tail" : "(s: Step[F, E, A])(F: Applicative[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.fromStep", "link" : "io\/iteratee\/Iteratee$.html#fromStep[F[_],E,A](s:io.iteratee.internal.Step[F,E,A])(implicitF:cats.Applicative[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "iteratee", "tail" : "(s: F[Step[F, E, A]]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.iteratee", "link" : "io\/iteratee\/Iteratee$.html#iteratee[F[_],E,A](s:F[io.iteratee.internal.Step[F,E,A]]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "doneWithLeftovers", "tail" : "(value: A, remaining: List[E])(arg0: Applicative[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.doneWithLeftovers", "link" : "io\/iteratee\/Iteratee$.html#doneWithLeftovers[F[_],E,A](value:A,remaining:List[E])(implicitevidence$4:cats.Applicative[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A)(arg0: Applicative[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.done", "link" : "io\/iteratee\/Iteratee$.html#done[F[_],E,A](value:A)(implicitevidence$3:cats.Applicative[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[F, E, A], ifEnd: F[A])(arg0: Applicative[F]): Iteratee[F, E, A]", "member" : "io.iteratee.Iteratee.cont", "link" : "io\/iteratee\/Iteratee$.html#cont[F[_],E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A])(implicitevidence$2:cats.Applicative[F]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "iterateeMonadError", "tail" : "(F: MonadError[F, T]): MonadError[[γ$2$]Iteratee[F, E, γ$2$], T]", "member" : "io.iteratee.IterateeInstances.iterateeMonadError", "link" : "io\/iteratee\/Iteratee$.html#iterateeMonadError[F[_],T,E](implicitF:cats.MonadError[F,T]):cats.MonadError[[γ$2$]io.iteratee.Iteratee[F,E,γ$2$],T]", "kind" : "implicit final def"}, {"label" : "iterateeContravariant", "tail" : "(arg0: Monad[F]): Contravariant[[β$0$]Iteratee[F, β$0$, A]]", "member" : "io.iteratee.IterateeInstances.iterateeContravariant", "link" : "io\/iteratee\/Iteratee$.html#iterateeContravariant[F[_],A](implicitevidence$1:cats.Monad[F]):cats.functor.Contravariant[[β$0$]io.iteratee.Iteratee[F,β$0$,A]]", "kind" : "implicit final def"}, {"label" : "iterateeMonad", "tail" : "(F: Monad[F]): Monad[[γ$3$]Iteratee[F, E, γ$3$]]", "member" : "io.iteratee.IterateeInstances0.iterateeMonad", "link" : "io\/iteratee\/Iteratee$.html#iterateeMonad[F[_],E](implicitF:cats.Monad[F]):cats.Monad[[γ$3$]io.iteratee.Iteratee[F,E,γ$3$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Iteratee$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Iteratee$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Iteratee$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Iteratee$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Iteratee$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Iteratee$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Iteratee$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Iteratee$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Iteratee$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Iteratee$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Iteratee$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Iteratee$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Iteratee$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Iteratee$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Iteratee$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Iteratee$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Iteratee$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Iteratee$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Iteratee$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/iteratee\/Iteratee.html", "kind" : "class"}, {"name" : "io.iteratee.IterateeErrorModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "failIteratee", "tail" : "(t: T): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/IterateeErrorModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ F[Unit]): Iteratee[F, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/IterateeErrorModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/IterateeErrorModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[F, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/IterateeErrorModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[F, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/IterateeErrorModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/IterateeErrorModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[F, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/IterateeErrorModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[F, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/IterateeErrorModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[F, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/IterateeErrorModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/IterateeErrorModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/IterateeErrorModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[F, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/IterateeErrorModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[F, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/IterateeErrorModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[F, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/IterateeErrorModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[F, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/IterateeErrorModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[F, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/IterateeErrorModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[F, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/IterateeErrorModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ F[A]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/IterateeErrorModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/IterateeErrorModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/IterateeErrorModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): (IterateeErrorModule.this)#LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/IterateeErrorModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/IterateeErrorModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[F, E, A], ifEnd: F[A]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/IterateeErrorModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/IterateeErrorModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/IterateeErrorModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/IterateeErrorModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/IterateeErrorModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/IterateeErrorModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/IterateeErrorModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/IterateeErrorModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/IterateeErrorModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/IterateeErrorModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/IterateeErrorModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/IterateeErrorModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/IterateeErrorModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/IterateeErrorModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/IterateeErrorModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/IterateeErrorModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/IterateeErrorModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/IterateeErrorModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/IterateeErrorModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/IterateeErrorModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/IterateeErrorModule.html", "kind" : "trait"}, {"name" : "io.iteratee.IterateeModule", "members_trait" : [{"label" : "foreachM", "tail" : "(f: (A) ⇒ F[Unit]): Iteratee[F, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/IterateeModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/IterateeModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[F, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/IterateeModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[F, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/IterateeModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/IterateeModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[F, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/IterateeModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[F, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/IterateeModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[F, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/IterateeModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/IterateeModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/IterateeModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[F, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/IterateeModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[F, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/IterateeModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[F, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/IterateeModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[F, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/IterateeModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[F, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/IterateeModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[F, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/IterateeModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ F[A]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/IterateeModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/IterateeModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[F, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/IterateeModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): (IterateeModule.this)#LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/IterateeModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/IterateeModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[F, E, A], ifEnd: F[A]): Iteratee[F, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/IterateeModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/IterateeModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/IterateeModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/IterateeModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/IterateeModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/IterateeModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/IterateeModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/IterateeModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/IterateeModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/IterateeModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/IterateeModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/IterateeModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/IterateeModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/IterateeModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/IterateeModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/IterateeModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/IterateeModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/IterateeModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/IterateeModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/IterateeModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/IterateeModule.html", "kind" : "trait"}, {"name" : "io.iteratee.Module", "members_trait" : [{"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Module.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Module.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Module.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Module.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Module.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Module.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Module.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Module.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Module.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Module.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Module.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Module.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Module.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Module.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Module.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Module.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Module.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Module.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Module.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): M[F]", "member" : "io.iteratee.Module.F", "link" : "io\/iteratee\/Module.html#F:Module.this.M[F]", "kind" : "abstract def"}, {"member" : "io.iteratee.Module.M", "error" : "unsupported entity"}], "shortDescription" : "", "object" : "io\/iteratee\/Module$.html", "members_object" : [{"label" : "apply", "tail" : "(monad: Monad[M]): Module[M]", "member" : "io.iteratee.Module.apply", "link" : "io\/iteratee\/Module$.html#apply[M[_]](implicitmonad:cats.Monad[M]):io.iteratee.Module[M]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/Module$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/Module$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/Module$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/Module$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/Module$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/Module$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/Module$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Module$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Module$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/Module$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/Module$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/Module$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/Module$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/Module$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/Module$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/Module$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/Module$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/Module$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/Module$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/iteratee\/Module.html", "kind" : "trait"}], "io.iteratee.modules" : [{"name" : "io.iteratee.modules.either", "shortDescription" : "", "object" : "io\/iteratee\/modules\/either$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[[β$4$]Either[Throwable, β$4$], Throwable]", "member" : "io.iteratee.modules.EitherModule.F", "link" : "io\/iteratee\/modules\/either$.html#F:cats.MonadError[[β$4$]scala.util.Either[Throwable,β$4$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherModule.M", "link" : "io\/iteratee\/modules\/either$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/modules\/either$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Either[Throwable, Unit]): Iteratee[[β$3$]Either[Throwable, β$3$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/either$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/either$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/either$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/either$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/either$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/either$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/either$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/either$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/either$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/either$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/either$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/either$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/either$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/either$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[β$3$]Either[Throwable, β$3$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/either$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/either$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/either$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/either$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/either$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/either$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/either$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[β$3$]Either[Throwable, β$3$], E, A], ifEnd: Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/either$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/modules\/either$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/modules\/either$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/either$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/either$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/either$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/either$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/either$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/either$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/either$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/either$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/either$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/either$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/either$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/either$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/either$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/either$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/either$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/either$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[β$1$]Either[Throwable, β$1$], E2]): Enumeratee[[β$1$]Either[Throwable, β$1$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/either$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/either$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/either$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[β$1$]Either[Throwable, β$1$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/either$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/either$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[β$1$]Either[Throwable, β$1$], O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/either$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/either$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/either$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/either$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/either$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/either$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/either$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/either$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/either$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/either$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[β$1$]Either[Throwable, β$1$], I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/either$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Either[Throwable, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/either$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/either$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/either$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/either$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/either$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/either$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/either$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/either$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/either$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/either$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/either$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/either$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/either$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/either$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/either$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/either$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/either$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/either$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/either$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/either$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/either$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.modules.EitherModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[[β$4$]Either[Throwable, β$4$], Throwable]", "member" : "io.iteratee.modules.EitherModule.F", "link" : "io\/iteratee\/modules\/EitherModule.html#F:cats.MonadError[[β$4$]scala.util.Either[Throwable,β$4$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherModule.M", "link" : "io\/iteratee\/modules\/EitherModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/modules\/EitherModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Either[Throwable, Unit]): Iteratee[[β$3$]Either[Throwable, β$3$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/EitherModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/EitherModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/EitherModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/EitherModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/EitherModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/EitherModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/EitherModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/EitherModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/EitherModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/EitherModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/EitherModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/EitherModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/EitherModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/EitherModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[β$3$]Either[Throwable, β$3$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/EitherModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/EitherModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/EitherModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/EitherModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[β$3$]Either[Throwable, β$3$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/EitherModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/EitherModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/EitherModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[β$3$]Either[Throwable, β$3$], E, A], ifEnd: Either[Throwable, A]): Iteratee[[β$3$]Either[Throwable, β$3$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/EitherModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/modules\/EitherModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/modules\/EitherModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/EitherModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, Option[E]]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/EitherModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/EitherModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/EitherModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/EitherModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/EitherModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/EitherModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/EitherModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/EitherModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/EitherModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/EitherModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/EitherModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/EitherModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/EitherModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Either[Throwable, E]): Enumerator[[β$2$]Either[Throwable, β$2$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/EitherModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/EitherModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[β$1$]Either[Throwable, β$1$], E2]): Enumeratee[[β$1$]Either[Throwable, β$1$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/EitherModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/EitherModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[β$1$]Either[Throwable, β$1$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/EitherModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[β$1$]Either[Throwable, β$1$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/EitherModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/EitherModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[β$1$]Either[Throwable, β$1$], O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/EitherModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/EitherModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/EitherModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/EitherModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/EitherModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/EitherModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/EitherModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Either[Throwable, Boolean]): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/EitherModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/EitherModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[β$1$]Either[Throwable, β$1$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/EitherModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[β$1$]Either[Throwable, β$1$], I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/EitherModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Either[Throwable, I]): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/EitherModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[β$1$]Either[Throwable, β$1$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/EitherModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/EitherModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/EitherModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/EitherModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/EitherModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/EitherModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/EitherModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/EitherModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EitherModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EitherModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EitherModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/EitherModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/EitherModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/EitherModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/EitherModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/EitherModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/EitherModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/EitherModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/EitherModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/EitherModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/modules\/EitherModule.html", "kind" : "trait"}, {"name" : "io.iteratee.modules.eitherT", "shortDescription" : "", "object" : "io\/iteratee\/modules\/eitherT$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[[γ$9$]EitherT[Eval, Throwable, γ$9$], Throwable]", "member" : "io.iteratee.modules.EitherTModule.F", "link" : "io\/iteratee\/modules\/eitherT$.html#F:cats.MonadError[[γ$9$]cats.data.EitherT[cats.Eval,Throwable,γ$9$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherTModule.M", "link" : "io\/iteratee\/modules\/eitherT$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/modules\/eitherT$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ EitherT[Eval, Throwable, Unit]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/eitherT$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/eitherT$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/eitherT$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/eitherT$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/eitherT$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/eitherT$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/eitherT$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/eitherT$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/eitherT$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/eitherT$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/eitherT$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/eitherT$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/eitherT$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/eitherT$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/eitherT$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/eitherT$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/eitherT$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/eitherT$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/eitherT$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/eitherT$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/eitherT$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A], ifEnd: EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/eitherT$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/modules\/eitherT$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/modules\/eitherT$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/eitherT$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/eitherT$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/eitherT$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/eitherT$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/eitherT$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/eitherT$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/eitherT$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/eitherT$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/eitherT$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/eitherT$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/eitherT$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/eitherT$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/eitherT$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/eitherT$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/eitherT$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/eitherT$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], E2]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/eitherT$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/eitherT$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/eitherT$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/eitherT$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/eitherT$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/eitherT$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/eitherT$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/eitherT$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/eitherT$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/eitherT$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/eitherT$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/eitherT$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/eitherT$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/eitherT$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/eitherT$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/eitherT$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ EitherT[Eval, Throwable, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/eitherT$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/eitherT$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/eitherT$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/eitherT$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/eitherT$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/eitherT$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/eitherT$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/eitherT$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/eitherT$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/eitherT$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/eitherT$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/eitherT$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/eitherT$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/eitherT$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/eitherT$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/eitherT$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/eitherT$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/eitherT$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/eitherT$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/eitherT$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/eitherT$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.modules.EitherTModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[[γ$9$]EitherT[Eval, Throwable, γ$9$], Throwable]", "member" : "io.iteratee.modules.EitherTModule.F", "link" : "io\/iteratee\/modules\/EitherTModule.html#F:cats.MonadError[[γ$9$]cats.data.EitherT[cats.Eval,Throwable,γ$9$],Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EitherTModule.M", "link" : "io\/iteratee\/modules\/EitherTModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/modules\/EitherTModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ EitherT[Eval, Throwable, Unit]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/EitherTModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/EitherTModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/EitherTModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/EitherTModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/EitherTModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/EitherTModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/EitherTModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/EitherTModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/EitherTModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/EitherTModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/EitherTModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/EitherTModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/EitherTModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/EitherTModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/EitherTModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/EitherTModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/EitherTModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/EitherTModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/EitherTModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/EitherTModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/EitherTModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A], ifEnd: EitherT[Eval, Throwable, A]): Iteratee[[γ$8$]EitherT[Eval, Throwable, γ$8$], E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/EitherTModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/modules\/EitherTModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/modules\/EitherTModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/EitherTModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, Option[E]]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/EitherTModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/EitherTModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/EitherTModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/EitherTModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/EitherTModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/EitherTModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/EitherTModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/EitherTModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/EitherTModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/EitherTModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/EitherTModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/EitherTModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/EitherTModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: EitherT[Eval, Throwable, E]): Enumerator[[γ$7$]EitherT[Eval, Throwable, γ$7$], E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/EitherTModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/EitherTModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], E2]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/EitherTModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/EitherTModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/EitherTModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/EitherTModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/EitherTModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/EitherTModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/EitherTModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/EitherTModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/EitherTModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/EitherTModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/EitherTModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/EitherTModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ EitherT[Eval, Throwable, Boolean]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/EitherTModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/EitherTModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/EitherTModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[[γ$6$]EitherT[Eval, Throwable, γ$6$], I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/EitherTModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ EitherT[Eval, Throwable, I]): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/EitherTModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[[γ$6$]EitherT[Eval, Throwable, γ$6$], O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/EitherTModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/EitherTModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/EitherTModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/EitherTModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/EitherTModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/EitherTModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/EitherTModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/EitherTModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EitherTModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EitherTModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EitherTModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/EitherTModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/EitherTModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/EitherTModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/EitherTModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/EitherTModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/EitherTModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/EitherTModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/EitherTModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/EitherTModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/modules\/EitherTModule.html", "kind" : "trait"}, {"name" : "io.iteratee.modules.eval", "shortDescription" : "", "object" : "io\/iteratee\/modules\/eval$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": Monad[Eval]", "member" : "io.iteratee.modules.EvalModule.F", "link" : "io\/iteratee\/modules\/eval$.html#F:cats.Monad[cats.Eval]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EvalModule.M", "link" : "io\/iteratee\/modules\/eval$.html#M[f[_]]=cats.Monad[f]", "kind" : "final type"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Eval[Unit]): Iteratee[Eval, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/eval$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/eval$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Eval, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/eval$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Eval, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/eval$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/eval$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Eval, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/eval$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Eval, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/eval$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Eval, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/eval$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/eval$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/eval$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Eval, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/eval$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Eval, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/eval$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Eval, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/eval$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Eval, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/eval$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Eval, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/eval$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Eval, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/eval$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Eval[A]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/eval$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/eval$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/eval$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/eval$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/eval$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Eval, E, A], ifEnd: Eval[A]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/eval$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Eval[Option[E]]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/eval$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Eval[Option[E]]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/eval$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/eval$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Eval[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/eval$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/eval$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/eval$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/eval$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/eval$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/eval$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/eval$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/eval$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/eval$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/eval$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/eval$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Eval[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/eval$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/eval$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Eval, E2]): Enumeratee[Eval, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/eval$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/eval$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Eval, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/eval$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Eval, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/eval$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/eval$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Eval, O, I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/eval$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Eval[Boolean]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/eval$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/eval$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/eval$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Eval[Boolean]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/eval$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/eval$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/eval$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Eval[Boolean]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/eval$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/eval$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/eval$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Eval, I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/eval$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Eval[I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/eval$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/eval$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/eval$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/eval$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/eval$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/eval$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/eval$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/eval$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/eval$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/eval$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/eval$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/eval$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/eval$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/eval$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/eval$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/eval$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/eval$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/eval$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/eval$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/eval$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/eval$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.modules.EvalModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": Monad[Eval]", "member" : "io.iteratee.modules.EvalModule.F", "link" : "io\/iteratee\/modules\/EvalModule.html#F:cats.Monad[cats.Eval]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.EvalModule.M", "link" : "io\/iteratee\/modules\/EvalModule.html#M[f[_]]=cats.Monad[f]", "kind" : "final type"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Eval[Unit]): Iteratee[Eval, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/EvalModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/EvalModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Eval, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/EvalModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Eval, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/EvalModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/EvalModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Eval, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/EvalModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Eval, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/EvalModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Eval, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/EvalModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/EvalModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/EvalModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Eval, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/EvalModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Eval, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/EvalModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Eval, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/EvalModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Eval, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/EvalModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Eval, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/EvalModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Eval, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/EvalModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Eval[A]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/EvalModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/EvalModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Eval, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/EvalModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/EvalModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/EvalModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Eval, E, A], ifEnd: Eval[A]): Iteratee[Eval, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/EvalModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Eval[Option[E]]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/EvalModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Eval[Option[E]]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/EvalModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/EvalModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Eval[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/EvalModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/EvalModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/EvalModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/EvalModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/EvalModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/EvalModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/EvalModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/EvalModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/EvalModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/EvalModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/EvalModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Eval[E]): Enumerator[Eval, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/EvalModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/EvalModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Eval, E2]): Enumeratee[Eval, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/EvalModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/EvalModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Eval, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/EvalModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Eval, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/EvalModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/EvalModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Eval, O, I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/EvalModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Eval[Boolean]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/EvalModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/EvalModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/EvalModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Eval[Boolean]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/EvalModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/EvalModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/EvalModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Eval[Boolean]): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/EvalModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/EvalModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Eval, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/EvalModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Eval, I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/EvalModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Eval[I]): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/EvalModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Eval, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/EvalModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/EvalModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/EvalModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/EvalModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/EvalModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/EvalModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/EvalModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/EvalModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EvalModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EvalModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/EvalModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/EvalModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/EvalModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/EvalModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/EvalModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/EvalModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/EvalModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/EvalModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/EvalModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/EvalModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/modules\/EvalModule.html", "kind" : "trait"}, {"name" : "io.iteratee.modules.FutureModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[Future, Throwable]", "member" : "io.iteratee.modules.FutureModule.F", "link" : "io\/iteratee\/modules\/FutureModule.html#F:cats.MonadError[scala.concurrent.Future,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.FutureModule.M", "link" : "io\/iteratee\/modules\/FutureModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/modules\/FutureModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Future[Unit]): Iteratee[Future, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/FutureModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/FutureModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Future, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/FutureModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Future, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/FutureModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/FutureModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Future, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/FutureModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Future, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/FutureModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Future, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/FutureModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/FutureModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/FutureModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Future, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/FutureModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Future, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/FutureModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Future, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/FutureModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Future, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/FutureModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Future, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/FutureModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Future, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/FutureModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Future[A]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/FutureModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/FutureModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Future, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/FutureModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/FutureModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/FutureModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Future, E, A], ifEnd: Future[A]): Iteratee[Future, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/FutureModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/modules\/FutureModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/modules\/FutureModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Future[Option[E]]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/FutureModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Future[Option[E]]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/FutureModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/FutureModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Future[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/FutureModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/FutureModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/FutureModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/FutureModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/FutureModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/FutureModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/FutureModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/FutureModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/FutureModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/FutureModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/FutureModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Future[E]): Enumerator[Future, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/FutureModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/FutureModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Future, E2]): Enumeratee[Future, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/FutureModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/FutureModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Future, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/FutureModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Future, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/FutureModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/FutureModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Future, O, I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/FutureModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Future[Boolean]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/FutureModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/FutureModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/FutureModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Future[Boolean]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/FutureModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/FutureModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/FutureModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Future[Boolean]): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/FutureModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/FutureModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Future, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/FutureModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Future, I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/FutureModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Future[I]): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/FutureModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Future, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/FutureModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/FutureModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/FutureModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/FutureModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/FutureModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/FutureModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/FutureModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/FutureModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/FutureModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/FutureModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/FutureModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/FutureModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/FutureModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/FutureModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/FutureModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/FutureModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/FutureModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/FutureModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/FutureModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/FutureModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ec", "tail" : "(): ExecutionContext", "member" : "io.iteratee.modules.FutureModule.ec", "link" : "io\/iteratee\/modules\/FutureModule.html#ec:scala.concurrent.ExecutionContext", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/iteratee\/modules\/FutureModule.html", "kind" : "trait"}, {"name" : "io.iteratee.modules.id", "shortDescription" : "", "object" : "io\/iteratee\/modules\/id$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": Monad[Id]", "member" : "io.iteratee.modules.IdModule.F", "link" : "io\/iteratee\/modules\/id$.html#F:cats.Monad[cats.Id]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.IdModule.M", "link" : "io\/iteratee\/modules\/id$.html#M[f[_]]=cats.Monad[f]", "kind" : "final type"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Id[Unit]): Iteratee[Id, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/id$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/id$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Id, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/id$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Id, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/id$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/id$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Id, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/id$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Id, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/id$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Id, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/id$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/id$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/id$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Id, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/id$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Id, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/id$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Id, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/id$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Id, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/id$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Id, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/id$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Id, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/id$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Id[A]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/id$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/id$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/id$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/id$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/id$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Id, E, A], ifEnd: Id[A]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/id$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Id[Option[E]]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/id$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Id[Option[E]]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/id$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/id$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Id[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/id$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/id$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/id$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/id$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/id$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/id$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/id$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/id$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/id$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/id$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/id$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Id[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/id$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/id$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Id, E2]): Enumeratee[Id, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/id$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/id$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Id, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/id$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Id, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/id$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/id$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Id, O, I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/id$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Id[Boolean]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/id$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/id$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/id$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Id[Boolean]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/id$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/id$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/id$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Id[Boolean]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/id$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/id$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/id$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Id, I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/id$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Id[I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/id$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/id$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/id$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/id$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/id$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/id$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/id$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/id$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/id$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/id$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/id$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/id$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/id$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/id$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/id$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/id$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/id$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/id$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/id$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/id$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/id$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.modules.IdModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": Monad[Id]", "member" : "io.iteratee.modules.IdModule.F", "link" : "io\/iteratee\/modules\/IdModule.html#F:cats.Monad[cats.Id]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.IdModule.M", "link" : "io\/iteratee\/modules\/IdModule.html#M[f[_]]=cats.Monad[f]", "kind" : "final type"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Id[Unit]): Iteratee[Id, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/IdModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/IdModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Id, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/IdModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Id, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/IdModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/IdModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Id, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/IdModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Id, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/IdModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Id, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/IdModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/IdModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/IdModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Id, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/IdModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Id, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/IdModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Id, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/IdModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Id, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/IdModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Id, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/IdModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Id, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/IdModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Id[A]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/IdModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/IdModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Id, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/IdModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/IdModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/IdModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Id, E, A], ifEnd: Id[A]): Iteratee[Id, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/IdModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Id[Option[E]]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/IdModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Id[Option[E]]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/IdModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/IdModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Id[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/IdModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/IdModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/IdModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/IdModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/IdModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/IdModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/IdModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/IdModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/IdModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/IdModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/IdModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Id[E]): Enumerator[Id, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/IdModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/IdModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Id, E2]): Enumeratee[Id, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/IdModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/IdModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Id, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/IdModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Id, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/IdModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/IdModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Id, O, I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/IdModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Id[Boolean]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/IdModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/IdModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/IdModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Id[Boolean]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/IdModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/IdModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/IdModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Id[Boolean]): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/IdModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/IdModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Id, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/IdModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Id, I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/IdModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Id[I]): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/IdModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Id, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/IdModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/IdModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/IdModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/IdModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/IdModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/IdModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/IdModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/IdModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/IdModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/IdModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/IdModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/IdModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/IdModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/IdModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/IdModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/IdModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/IdModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/IdModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/IdModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/IdModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/modules\/IdModule.html", "kind" : "trait"}, {"name" : "io.iteratee.modules.option", "shortDescription" : "", "object" : "io\/iteratee\/modules\/option$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": Monad[Option]", "member" : "io.iteratee.modules.OptionModule.F", "link" : "io\/iteratee\/modules\/option$.html#F:cats.Monad[Option]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.OptionModule.M", "link" : "io\/iteratee\/modules\/option$.html#M[f[_]]=cats.Monad[f]", "kind" : "final type"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Option[Unit]): Iteratee[Option, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/option$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/option$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Option, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/option$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Option, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/option$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/option$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Option, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/option$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Option, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/option$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Option, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/option$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/option$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/option$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Option, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/option$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Option, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/option$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Option, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/option$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Option, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/option$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Option, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/option$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Option, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/option$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Option[A]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/option$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/option$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/option$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/option$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/option$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Option, E, A], ifEnd: Option[A]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/option$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Option[Option[E]]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/option$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Option[Option[E]]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/option$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/option$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/option$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/option$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/option$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/option$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/option$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/option$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/option$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/option$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/option$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/option$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/option$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Option[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/option$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/option$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Option, E2]): Enumeratee[Option, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/option$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/option$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Option, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/option$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Option, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/option$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/option$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Option, O, I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/option$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Option[Boolean]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/option$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/option$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/option$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Option[Boolean]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/option$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/option$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/option$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Option[Boolean]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/option$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/option$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/option$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Option, I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/option$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Option[I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/option$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/option$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/option$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/option$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/option$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/option$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/option$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/option$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/option$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/option$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/option$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/option$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/option$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/option$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/option$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/option$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/option$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/option$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/option$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/option$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/option$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.modules.OptionModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": Monad[Option]", "member" : "io.iteratee.modules.OptionModule.F", "link" : "io\/iteratee\/modules\/OptionModule.html#F:cats.Monad[Option]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.OptionModule.M", "link" : "io\/iteratee\/modules\/OptionModule.html#M[f[_]]=cats.Monad[f]", "kind" : "final type"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Option[Unit]): Iteratee[Option, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/OptionModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/OptionModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Option, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/OptionModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Option, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/OptionModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/OptionModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Option, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/OptionModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Option, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/OptionModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Option, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/OptionModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/OptionModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/OptionModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Option, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/OptionModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Option, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/OptionModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Option, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/OptionModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Option, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/OptionModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Option, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/OptionModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Option, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/OptionModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Option[A]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/OptionModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/OptionModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Option, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/OptionModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/OptionModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/OptionModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Option, E, A], ifEnd: Option[A]): Iteratee[Option, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/OptionModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Option[Option[E]]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/OptionModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Option[Option[E]]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/OptionModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/OptionModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/OptionModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/OptionModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/OptionModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/OptionModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/OptionModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/OptionModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/OptionModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/OptionModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/OptionModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/OptionModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/OptionModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Option[E]): Enumerator[Option, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/OptionModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/OptionModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Option, E2]): Enumeratee[Option, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/OptionModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/OptionModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Option, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/OptionModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Option, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/OptionModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/OptionModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Option, O, I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/OptionModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Option[Boolean]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/OptionModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/OptionModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/OptionModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Option[Boolean]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/OptionModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/OptionModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/OptionModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Option[Boolean]): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/OptionModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/OptionModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Option, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/OptionModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Option, I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/OptionModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Option[I]): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/OptionModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Option, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/OptionModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/OptionModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/OptionModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/OptionModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/OptionModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/OptionModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/OptionModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/OptionModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/OptionModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/OptionModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/OptionModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/OptionModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/OptionModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/OptionModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/OptionModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/OptionModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/OptionModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/OptionModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/OptionModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/OptionModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/modules\/OptionModule.html", "kind" : "trait"}, {"name" : "io.iteratee.modules.try_", "shortDescription" : "", "object" : "io\/iteratee\/modules\/try_$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[Try, Throwable]", "member" : "io.iteratee.modules.TryModule.F", "link" : "io\/iteratee\/modules\/try_$.html#F:cats.MonadError[scala.util.Try,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.TryModule.M", "link" : "io\/iteratee\/modules\/try_$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/modules\/try_$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Try[Unit]): Iteratee[Try, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/try_$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/try_$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Try, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/try_$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Try, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/try_$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/try_$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Try, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/try_$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Try, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/try_$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Try, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/try_$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/try_$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/try_$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/try_$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/try_$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/try_$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/try_$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Try, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/try_$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/try_$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/try_$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/try_$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/try_$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/try_$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/try_$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Try, E, A], ifEnd: Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/try_$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/modules\/try_$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/modules\/try_$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/try_$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/try_$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/try_$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/try_$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/try_$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/try_$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/try_$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/try_$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/try_$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/try_$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/try_$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/try_$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/try_$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/try_$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/try_$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/try_$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Try, E2]): Enumeratee[Try, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/try_$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/try_$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/try_$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Try, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/try_$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/try_$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Try, O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/try_$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/try_$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/try_$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/try_$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/try_$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/try_$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/try_$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/try_$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/try_$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/try_$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Try, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/try_$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Try[I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/try_$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/try_$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/try_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/try_$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/try_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/try_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/try_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/try_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/try_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/try_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/try_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/try_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/try_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/try_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/try_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/try_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/try_$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/try_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/try_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/try_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/try_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.modules.TryModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "F", "tail" : ": MonadError[Try, Throwable]", "member" : "io.iteratee.modules.TryModule.F", "link" : "io\/iteratee\/modules\/TryModule.html#F:cats.MonadError[scala.util.Try,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.modules.TryModule.M", "link" : "io\/iteratee\/modules\/TryModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/modules\/TryModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Try[Unit]): Iteratee[Try, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/modules\/TryModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/modules\/TryModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Try, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/modules\/TryModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Try, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/modules\/TryModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/modules\/TryModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Try, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/modules\/TryModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Try, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/modules\/TryModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Try, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/modules\/TryModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/modules\/TryModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/modules\/TryModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/modules\/TryModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/modules\/TryModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/modules\/TryModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Try, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/modules\/TryModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Try, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/modules\/TryModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Try, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/modules\/TryModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/modules\/TryModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/modules\/TryModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Try, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/modules\/TryModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/modules\/TryModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/modules\/TryModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Try, E, A], ifEnd: Try[A]): Iteratee[Try, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/modules\/TryModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/modules\/TryModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/modules\/TryModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/modules\/TryModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Try[Option[E]]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/modules\/TryModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/modules\/TryModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/modules\/TryModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/modules\/TryModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/modules\/TryModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/modules\/TryModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/modules\/TryModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/modules\/TryModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/modules\/TryModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/modules\/TryModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/modules\/TryModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/modules\/TryModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/modules\/TryModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Try[E]): Enumerator[Try, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/modules\/TryModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/modules\/TryModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Try, E2]): Enumeratee[Try, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/modules\/TryModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/modules\/TryModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Try, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/modules\/TryModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Try, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/modules\/TryModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/modules\/TryModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Try, O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/modules\/TryModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/modules\/TryModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/modules\/TryModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/modules\/TryModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/modules\/TryModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/modules\/TryModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/modules\/TryModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Try[Boolean]): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/modules\/TryModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/modules\/TryModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Try, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/modules\/TryModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Try, I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/modules\/TryModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Try[I]): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/modules\/TryModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Try, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/modules\/TryModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/modules\/TryModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/modules\/TryModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/modules\/TryModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/modules\/TryModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/modules\/TryModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/modules\/TryModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/modules\/TryModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/TryModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/TryModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/modules\/TryModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/modules\/TryModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/modules\/TryModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/modules\/TryModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/modules\/TryModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/modules\/TryModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/modules\/TryModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/modules\/TryModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/modules\/TryModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/modules\/TryModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/modules\/TryModule.html", "kind" : "trait"}], "io" : [], "io.iteratee.fs2" : [{"name" : "io.iteratee.fs2.task", "shortDescription" : "", "object" : "io\/iteratee\/fs2\/task$.html", "members_object" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): Task[A]", "member" : "io.iteratee.fs2.TaskModule.captureEffect", "link" : "io\/iteratee\/fs2\/task$.html#captureEffect[A](a:=>A):fs2.Task[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.fs2.TaskModule.F", "link" : "io\/iteratee\/fs2\/task$.html#F:cats.MonadError[fs2.Task,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.fs2.TaskModule.M", "link" : "io\/iteratee\/fs2\/task$.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/fs2\/task$.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/fs2\/task$.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/fs2\/task$.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/fs2\/task$.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/fs2\/task$.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/fs2\/task$.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Task, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/fs2\/task$.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/fs2\/task$.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/fs2\/task$.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/fs2\/task$.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/fs2\/task$.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Task[R])(f: (R) ⇒ Task[A])(F: MonadError[Task, Throwable]): Task[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/fs2\/task$.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/fs2\/task$.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Task[Unit]): Iteratee[Task, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/fs2\/task$.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/fs2\/task$.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Task, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/fs2\/task$.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Task, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/fs2\/task$.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/fs2\/task$.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Task, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/fs2\/task$.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Task, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/fs2\/task$.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Task, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/fs2\/task$.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/fs2\/task$.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/fs2\/task$.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/fs2\/task$.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/fs2\/task$.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/fs2\/task$.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/fs2\/task$.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Task, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/fs2\/task$.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/fs2\/task$.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/fs2\/task$.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/fs2\/task$.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/fs2\/task$.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/fs2\/task$.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/fs2\/task$.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Task, E, A], ifEnd: Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/fs2\/task$.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/fs2\/task$.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/fs2\/task$.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/fs2\/task$.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/fs2\/task$.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/fs2\/task$.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/fs2\/task$.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/fs2\/task$.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/fs2\/task$.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/fs2\/task$.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/fs2\/task$.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/fs2\/task$.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/fs2\/task$.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/fs2\/task$.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/fs2\/task$.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/fs2\/task$.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/fs2\/task$.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/fs2\/task$.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/fs2\/task$.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Task, E2]): Enumeratee[Task, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/fs2\/task$.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/fs2\/task$.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/fs2\/task$.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Task, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/fs2\/task$.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/fs2\/task$.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Task, O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/fs2\/task$.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/fs2\/task$.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/fs2\/task$.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/fs2\/task$.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/fs2\/task$.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/fs2\/task$.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/fs2\/task$.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/fs2\/task$.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/fs2\/task$.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/fs2\/task$.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Task, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/fs2\/task$.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Task[I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/fs2\/task$.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/fs2\/task$.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "kleisliSuspendableInstance", "tail" : "(F: Suspendable[F]): Suspendable[[γ$0$]Kleisli[F, E, γ$0$]]", "member" : "fs2.interop.cats.Instances.kleisliSuspendableInstance", "link" : "io\/iteratee\/fs2\/task$.html#kleisliSuspendableInstance[F[_],E](implicitF:fs2.util.Suspendable[F]):fs2.util.Suspendable[[γ$0$]cats.data.Kleisli[F,E,γ$0$]]", "kind" : "implicit def"}, {"label" : "uf1ToFunctionK", "tail" : "(uf1: UF1[F, G]): FunctionK[F, G]", "member" : "fs2.interop.cats.Instances.uf1ToFunctionK", "link" : "io\/iteratee\/fs2\/task$.html#uf1ToFunctionK[F[_],G[_]](implicituf1:fs2.util.UF1[F,G]):cats.arrow.FunctionK[F,G]", "kind" : "implicit def"}, {"label" : "effectToMonadError", "tail" : "(F: Effect[F]): MonadError[F, Throwable]", "member" : "fs2.interop.cats.Instances.effectToMonadError", "link" : "io\/iteratee\/fs2\/task$.html#effectToMonadError[F[_]](implicitF:fs2.util.Effect[F]):cats.MonadError[F,Throwable]", "kind" : "implicit def"}, {"label" : "kleisliCatchableInstance", "tail" : "(F: Catchable[F]): Catchable[[γ$2$]Kleisli[F, E, γ$2$]]", "member" : "fs2.interop.cats.Instances0.kleisliCatchableInstance", "link" : "io\/iteratee\/fs2\/task$.html#kleisliCatchableInstance[F[_],E](implicitF:fs2.util.Catchable[F]):fs2.util.Catchable[[γ$2$]cats.data.Kleisli[F,E,γ$2$]]", "kind" : "implicit def"}, {"label" : "catchableToMonadError", "tail" : "(F: Catchable[F]): MonadError[F, Throwable]", "member" : "fs2.interop.cats.Instances0.catchableToMonadError", "link" : "io\/iteratee\/fs2\/task$.html#catchableToMonadError[F[_]](implicitF:fs2.util.Catchable[F]):cats.MonadError[F,Throwable]", "kind" : "implicit def"}, {"label" : "monadToCats", "tail" : "(F: Monad[F]): Monad[F]", "member" : "fs2.interop.cats.Instances1.monadToCats", "link" : "io\/iteratee\/fs2\/task$.html#monadToCats[F[_]](implicitF:fs2.util.Monad[F]):cats.Monad[F]", "kind" : "implicit def"}, {"label" : "defaultTailRecM", "tail" : "(a: A)(f: (A) ⇒ F[Either[A, B]])(F: Monad[F]): F[B]", "member" : "fs2.interop.cats.Instances2.defaultTailRecM", "link" : "io\/iteratee\/fs2\/task$.html#defaultTailRecM[F[_<:<?>],A,B](a:A)(f:A=>F[Either[A,B]])(implicitF:fs2.util.Monad[F]):F[B]", "kind" : "def"}, {"label" : "functorToCats", "tail" : "(F: Functor[F]): Functor[F]", "member" : "fs2.interop.cats.Instances2.functorToCats", "link" : "io\/iteratee\/fs2\/task$.html#functorToCats[F[_]](implicitF:fs2.util.Functor[F]):cats.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/fs2\/task$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/fs2\/task$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/fs2\/task$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/fs2\/task$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/fs2\/task$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/fs2\/task$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/fs2\/task$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/fs2\/task$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/fs2\/task$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/fs2\/task$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/fs2\/task$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/fs2\/task$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/fs2\/task$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/fs2\/task$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/fs2\/task$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/fs2\/task$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/fs2\/task$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/fs2\/task$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/fs2\/task$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.iteratee.fs2.TaskModule", "members_trait" : [{"label" : "LiftToIterateePartiallyApplied", "tail" : "", "member" : "io.iteratee.IterateeModule.LiftToIterateePartiallyApplied", "link" : "io\/iteratee\/IterateeModule.html#LiftToIterateePartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "PerformPartiallyApplied", "tail" : "", "member" : "io.iteratee.EnumeratorModule.PerformPartiallyApplied", "link" : "io\/iteratee\/EnumeratorModule.html#PerformPartiallyApplied[E]extendsAnyRef", "kind" : "sealed class"}, {"label" : "syntax", "tail" : "", "member" : "io.iteratee.Module.syntax", "link" : "io\/iteratee\/Module.html#syntax", "kind" : "object"}, {"label" : "captureEffect", "tail" : "(a: ⇒ A): Task[A]", "member" : "io.iteratee.fs2.TaskModule.captureEffect", "link" : "io\/iteratee\/fs2\/TaskModule.html#captureEffect[A](a:=>A):fs2.Task[A]", "kind" : "final def"}, {"label" : "F", "tail" : ": MonadError[Task, Throwable]", "member" : "io.iteratee.fs2.TaskModule.F", "link" : "io\/iteratee\/fs2\/TaskModule.html#F:cats.MonadError[fs2.Task,Throwable]", "kind" : "final val"}, {"label" : "M", "tail" : "", "member" : "io.iteratee.fs2.TaskModule.M", "link" : "io\/iteratee\/fs2\/TaskModule.html#M[f[_]]=cats.MonadError[f,Throwable]", "kind" : "final type"}, {"label" : "writeBytesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytesToStream", "link" : "io\/iteratee\/fs2\/TaskModule.html#writeBytesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeBytes", "tail" : "(file: File): Iteratee[Task, Array[Byte], Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeBytes", "link" : "io\/iteratee\/fs2\/TaskModule.html#writeBytes(file:java.io.File):io.iteratee.Iteratee[F,Array[Byte],Unit]", "kind" : "def"}, {"label" : "writeLinesToStream", "tail" : "(stream: OutputStream): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLinesToStream", "link" : "io\/iteratee\/fs2\/TaskModule.html#writeLinesToStream(stream:java.io.OutputStream):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "writeLines", "tail" : "(file: File): Iteratee[Task, String, Unit]", "member" : "io.iteratee.files.SuspendableFileModule.writeLines", "link" : "io\/iteratee\/fs2\/TaskModule.html#writeLines(file:java.io.File):io.iteratee.Iteratee[F,String,Unit]", "kind" : "final def"}, {"label" : "listFilesRec", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFilesRec", "link" : "io\/iteratee\/fs2\/TaskModule.html#listFilesRec(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "listFiles", "tail" : "(dir: File): Enumerator[Task, File]", "member" : "io.iteratee.files.SuspendableFileModule.listFiles", "link" : "io\/iteratee\/fs2\/TaskModule.html#listFiles(dir:java.io.File):io.iteratee.Enumerator[F,java.io.File]", "kind" : "final def"}, {"label" : "readZipStreams", "tail" : "(file: File): Enumerator[Task, (ZipEntry, InputStream)]", "member" : "io.iteratee.files.SuspendableFileModule.readZipStreams", "link" : "io\/iteratee\/fs2\/TaskModule.html#readZipStreams(file:java.io.File):io.iteratee.Enumerator[F,(java.util.zip.ZipEntry,java.io.InputStream)]", "kind" : "final def"}, {"label" : "readBytesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytesFromStream", "link" : "io\/iteratee\/fs2\/TaskModule.html#readBytesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readBytes", "tail" : "(file: File): Enumerator[Task, Array[Byte]]", "member" : "io.iteratee.files.SuspendableFileModule.readBytes", "link" : "io\/iteratee\/fs2\/TaskModule.html#readBytes(file:java.io.File):io.iteratee.Enumerator[F,Array[Byte]]", "kind" : "final def"}, {"label" : "readLinesFromStream", "tail" : "(stream: InputStream): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLinesFromStream", "link" : "io\/iteratee\/fs2\/TaskModule.html#readLinesFromStream(stream:java.io.InputStream):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "readLines", "tail" : "(file: File): Enumerator[Task, String]", "member" : "io.iteratee.files.SuspendableFileModule.readLines", "link" : "io\/iteratee\/fs2\/TaskModule.html#readLines(file:java.io.File):io.iteratee.Enumerator[F,String]", "kind" : "final def"}, {"label" : "bracket", "tail" : "(fr: Task[R])(f: (R) ⇒ Task[A])(F: MonadError[Task, Throwable]): Task[A]", "member" : "io.iteratee.files.FileModule.bracket", "link" : "io\/iteratee\/fs2\/TaskModule.html#bracket[R<:java.io.Closeable,A](fr:F[R])(f:R=>F[A])(implicitF:cats.MonadError[F,Throwable]):F[A]", "kind" : "final def"}, {"label" : "failIteratee", "tail" : "(t: Throwable): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeErrorModule.failIteratee", "link" : "io\/iteratee\/fs2\/TaskModule.html#failIteratee[E,A](t:T):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "foreachM", "tail" : "(f: (A) ⇒ Task[Unit]): Iteratee[Task, A, Unit]", "member" : "io.iteratee.IterateeModule.foreachM", "link" : "io\/iteratee\/fs2\/TaskModule.html#foreachM[A](f:A=>F[Unit]):io.iteratee.Iteratee[F,A,Unit]", "kind" : "final def"}, {"label" : "foreach", "tail" : "(f: (E) ⇒ Unit): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.foreach", "link" : "io\/iteratee\/fs2\/TaskModule.html#foreach[E](f:E=>Unit):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "isEnd", "tail" : "(): Iteratee[Task, E, Boolean]", "member" : "io.iteratee.IterateeModule.isEnd", "link" : "io\/iteratee\/fs2\/TaskModule.html#isEnd[E]:io.iteratee.Iteratee[F,E,Boolean]", "kind" : "final def"}, {"label" : "foldMapOption", "tail" : "(f: (E) ⇒ A)(A: Semigroup[A]): Iteratee[Task, E, Option[A]]", "member" : "io.iteratee.IterateeModule.foldMapOption", "link" : "io\/iteratee\/fs2\/TaskModule.html#foldMapOption[E,A](f:E=>A)(implicitA:cats.Semigroup[A]):io.iteratee.Iteratee[F,E,Option[A]]", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(f: (E) ⇒ A)(A: Monoid[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldMap", "link" : "io\/iteratee\/fs2\/TaskModule.html#foldMap[E,A](f:E=>A)(implicitA:cats.Monoid[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "sum", "tail" : "(E: Monoid[E]): Iteratee[Task, E, E]", "member" : "io.iteratee.IterateeModule.sum", "link" : "io\/iteratee\/fs2\/TaskModule.html#sum[E](implicitE:cats.Monoid[E]):io.iteratee.Iteratee[F,E,E]", "kind" : "final def"}, {"label" : "length", "tail" : "(): Iteratee[Task, E, Long]", "member" : "io.iteratee.IterateeModule.length", "link" : "io\/iteratee\/fs2\/TaskModule.html#length[E]:io.iteratee.Iteratee[F,E,Long]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): Iteratee[Task, E, List[E]]", "member" : "io.iteratee.IterateeModule.reversed", "link" : "io\/iteratee\/fs2\/TaskModule.html#reversed[E]:io.iteratee.Iteratee[F,E,List[E]]", "kind" : "final def"}, {"label" : "dropWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropWhileI", "link" : "io\/iteratee\/fs2\/TaskModule.html#dropWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "dropI", "tail" : "(n: Int): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.dropI", "link" : "io\/iteratee\/fs2\/TaskModule.html#dropI[E](n:Int):io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "takeWhileI", "tail" : "(p: (E) ⇒ Boolean): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeWhileI", "link" : "io\/iteratee\/fs2\/TaskModule.html#takeWhileI[E](p:E=>Boolean):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "takeI", "tail" : "(n: Int): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.takeI", "link" : "io\/iteratee\/fs2\/TaskModule.html#takeI[E](n:Int):io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "peek", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.peek", "link" : "io\/iteratee\/fs2\/TaskModule.html#peek[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "head", "tail" : "(): Iteratee[Task, E, Option[E]]", "member" : "io.iteratee.IterateeModule.head", "link" : "io\/iteratee\/fs2\/TaskModule.html#head[E]:io.iteratee.Iteratee[F,E,Option[E]]", "kind" : "final def"}, {"label" : "consumeIn", "tail" : "(C: Applicative[C], M: MonoidK[C]): Iteratee[Task, E, C[E]]", "member" : "io.iteratee.IterateeModule.consumeIn", "link" : "io\/iteratee\/fs2\/TaskModule.html#consumeIn[E,C[_]](implicitC:cats.Applicative[C],implicitM:cats.MonoidK[C]):io.iteratee.Iteratee[F,E,C[E]]", "kind" : "final def"}, {"label" : "consume", "tail" : "(): Iteratee[Task, E, Vector[E]]", "member" : "io.iteratee.IterateeModule.consume", "link" : "io\/iteratee\/fs2\/TaskModule.html#consume[E]:io.iteratee.Iteratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "foldM", "tail" : "(init: A)(f: (A, E) ⇒ Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.foldM", "link" : "io\/iteratee\/fs2\/TaskModule.html#foldM[E,A](init:A)(f:(A,E)=>F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "fold", "tail" : "(init: A)(f: (A, E) ⇒ A): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.fold", "link" : "io\/iteratee\/fs2\/TaskModule.html#fold[E,A](init:A)(f:(A,E)=>A):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "identity", "tail" : "(): Iteratee[Task, E, Unit]", "member" : "io.iteratee.IterateeModule.identity", "link" : "io\/iteratee\/fs2\/TaskModule.html#identity[E]:io.iteratee.Iteratee[F,E,Unit]", "kind" : "final def"}, {"label" : "liftToIteratee", "tail" : "(): LiftToIterateePartiallyApplied[E]", "member" : "io.iteratee.IterateeModule.liftToIteratee", "link" : "io\/iteratee\/fs2\/TaskModule.html#liftToIteratee[E]:IterateeModule.this.LiftToIterateePartiallyApplied[E]", "kind" : "final def"}, {"label" : "done", "tail" : "(value: A, remaining: List[E]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.done", "link" : "io\/iteratee\/fs2\/TaskModule.html#done[E,A](value:A,remaining:List[E]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "cont", "tail" : "(ifInput: (NonEmptyList[E]) ⇒ Iteratee[Task, E, A], ifEnd: Task[A]): Iteratee[Task, E, A]", "member" : "io.iteratee.IterateeModule.cont", "link" : "io\/iteratee\/fs2\/TaskModule.html#cont[E,A](ifInput:cats.data.NonEmptyList[E]=>io.iteratee.Iteratee[F,E,A],ifEnd:F[A]):io.iteratee.Iteratee[F,E,A]", "kind" : "final def"}, {"label" : "enumEither", "tail" : "(either: Either[Throwable, E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.enumEither", "link" : "io\/iteratee\/fs2\/TaskModule.html#enumEither[E](either:Either[T,E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "failEnumerator", "tail" : "(t: Throwable): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorErrorModule.failEnumerator", "link" : "io\/iteratee\/fs2\/TaskModule.html#failEnumerator[E](t:T):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "generateM", "tail" : "(f: Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.generateM", "link" : "io\/iteratee\/fs2\/TaskModule.html#generateM[E](f:F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntilM", "tail" : "(init: E)(f: (E) ⇒ Task[Option[E]]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntilM", "link" : "io\/iteratee\/fs2\/TaskModule.html#iterateUntilM[E](init:E)(f:E=>F[Option[E]]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateUntil", "tail" : "(init: E)(f: (E) ⇒ Option[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateUntil", "link" : "io\/iteratee\/fs2\/TaskModule.html#iterateUntil[E](init:E)(f:E=>Option[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterateM", "tail" : "(init: E)(f: (E) ⇒ Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterateM", "link" : "io\/iteratee\/fs2\/TaskModule.html#iterateM[E](init:E)(f:E=>F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "iterate", "tail" : "(init: E)(f: (E) ⇒ E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.iterate", "link" : "io\/iteratee\/fs2\/TaskModule.html#iterate[E](init:E)(f:E=>E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "repeat", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.repeat", "link" : "io\/iteratee\/fs2\/TaskModule.html#repeat[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumIndexedSeq", "tail" : "(es: IndexedSeq[E], min: Int, max: Int): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumIndexedSeq", "link" : "io\/iteratee\/fs2\/TaskModule.html#enumIndexedSeq[E](es:IndexedSeq[E],min:Int,max:Int):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumVector", "tail" : "(es: Vector[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumVector", "link" : "io\/iteratee\/fs2\/TaskModule.html#enumVector[E](es:Vector[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumList", "tail" : "(es: List[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumList", "link" : "io\/iteratee\/fs2\/TaskModule.html#enumList[E](es:List[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumStream", "tail" : "(es: Stream[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumStream", "link" : "io\/iteratee\/fs2\/TaskModule.html#enumStream[E](es:Stream[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumOne", "tail" : "(e: E): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumOne", "link" : "io\/iteratee\/fs2\/TaskModule.html#enumOne[E](e:E):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "perform", "tail" : "(): PerformPartiallyApplied[E]", "member" : "io.iteratee.EnumeratorModule.perform", "link" : "io\/iteratee\/fs2\/TaskModule.html#perform[E]:EnumeratorModule.this.PerformPartiallyApplied[E]", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.empty", "link" : "io\/iteratee\/fs2\/TaskModule.html#empty[E]:io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "enumerate", "tail" : "(xs: E*): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.enumerate", "link" : "io\/iteratee\/fs2\/TaskModule.html#enumerate[E](xs:E*):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "liftToEnumerator", "tail" : "(fe: Task[E]): Enumerator[Task, E]", "member" : "io.iteratee.EnumeratorModule.liftToEnumerator", "link" : "io\/iteratee\/fs2\/TaskModule.html#liftToEnumerator[E](fe:F[E]):io.iteratee.Enumerator[F,E]", "kind" : "final def"}, {"label" : "intersperse", "tail" : "(delim: E): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.intersperse", "link" : "io\/iteratee\/fs2\/TaskModule.html#intersperse[E](delim:E):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "cross", "tail" : "(e2: Enumerator[Task, E2]): Enumeratee[Task, E1, (E1, E2)]", "member" : "io.iteratee.EnumerateeModule.cross", "link" : "io\/iteratee\/fs2\/TaskModule.html#cross[E1,E2](e2:io.iteratee.Enumerator[F,E2]):io.iteratee.Enumeratee[F,E1,(E1,E2)]", "kind" : "final def"}, {"label" : "splitOn", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.splitOn", "link" : "io\/iteratee\/fs2\/TaskModule.html#splitOn[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "grouped", "tail" : "(n: Int): Enumeratee[Task, E, Vector[E]]", "member" : "io.iteratee.EnumerateeModule.grouped", "link" : "io\/iteratee\/fs2\/TaskModule.html#grouped[E](n:Int):io.iteratee.Enumeratee[F,E,Vector[E]]", "kind" : "final def"}, {"label" : "zipWithIndex", "tail" : "(): Enumeratee[Task, E, (E, Long)]", "member" : "io.iteratee.EnumerateeModule.zipWithIndex", "link" : "io\/iteratee\/fs2\/TaskModule.html#zipWithIndex[E]:io.iteratee.Enumeratee[F,E,(E,Long)]", "kind" : "final def"}, {"label" : "uniq", "tail" : "(E: Eq[E]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.uniq", "link" : "io\/iteratee\/fs2\/TaskModule.html#uniq[E](implicitE:cats.Eq[E]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "sequenceI", "tail" : "(iteratee: Iteratee[Task, O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.sequenceI", "link" : "io\/iteratee\/fs2\/TaskModule.html#sequenceI[O,I](iteratee:io.iteratee.Iteratee[F,O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "filterM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filterM", "link" : "io\/iteratee\/fs2\/TaskModule.html#filterM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "filter", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.filter", "link" : "io\/iteratee\/fs2\/TaskModule.html#filter[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[O, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.collect", "link" : "io\/iteratee\/fs2\/TaskModule.html#collect[O,I](pf:PartialFunction[O,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "dropWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhileM", "link" : "io\/iteratee\/fs2\/TaskModule.html#dropWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.dropWhile", "link" : "io\/iteratee\/fs2\/TaskModule.html#dropWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "drop", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.drop", "link" : "io\/iteratee\/fs2\/TaskModule.html#drop[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhileM", "tail" : "(p: (E) ⇒ Task[Boolean]): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhileM", "link" : "io\/iteratee\/fs2\/TaskModule.html#takeWhileM[E](p:E=>F[Boolean]):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(p: (E) ⇒ Boolean): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.takeWhile", "link" : "io\/iteratee\/fs2\/TaskModule.html#takeWhile[E](p:E=>Boolean):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "take", "tail" : "(n: Long): Enumeratee[Task, E, E]", "member" : "io.iteratee.EnumerateeModule.take", "link" : "io\/iteratee\/fs2\/TaskModule.html#take[E](n:Long):io.iteratee.Enumeratee[F,E,E]", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (O) ⇒ Enumerator[Task, I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMap", "link" : "io\/iteratee\/fs2\/TaskModule.html#flatMap[O,I](f:O=>io.iteratee.Enumerator[F,I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "flatMapM", "tail" : "(f: (O) ⇒ Task[I]): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.flatMapM", "link" : "io\/iteratee\/fs2\/TaskModule.html#flatMapM[O,I](f:O=>F[I]):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (O) ⇒ I): Enumeratee[Task, O, I]", "member" : "io.iteratee.EnumerateeModule.map", "link" : "io\/iteratee\/fs2\/TaskModule.html#map[O,I](f:O=>I):io.iteratee.Enumeratee[F,O,I]", "kind" : "final def"}, {"label" : "kleisliSuspendableInstance", "tail" : "(F: Suspendable[F]): Suspendable[[γ$0$]Kleisli[F, E, γ$0$]]", "member" : "fs2.interop.cats.Instances.kleisliSuspendableInstance", "link" : "io\/iteratee\/fs2\/TaskModule.html#kleisliSuspendableInstance[F[_],E](implicitF:fs2.util.Suspendable[F]):fs2.util.Suspendable[[γ$0$]cats.data.Kleisli[F,E,γ$0$]]", "kind" : "implicit def"}, {"label" : "uf1ToFunctionK", "tail" : "(uf1: UF1[F, G]): FunctionK[F, G]", "member" : "fs2.interop.cats.Instances.uf1ToFunctionK", "link" : "io\/iteratee\/fs2\/TaskModule.html#uf1ToFunctionK[F[_],G[_]](implicituf1:fs2.util.UF1[F,G]):cats.arrow.FunctionK[F,G]", "kind" : "implicit def"}, {"label" : "effectToMonadError", "tail" : "(F: Effect[F]): MonadError[F, Throwable]", "member" : "fs2.interop.cats.Instances.effectToMonadError", "link" : "io\/iteratee\/fs2\/TaskModule.html#effectToMonadError[F[_]](implicitF:fs2.util.Effect[F]):cats.MonadError[F,Throwable]", "kind" : "implicit def"}, {"label" : "kleisliCatchableInstance", "tail" : "(F: Catchable[F]): Catchable[[γ$2$]Kleisli[F, E, γ$2$]]", "member" : "fs2.interop.cats.Instances0.kleisliCatchableInstance", "link" : "io\/iteratee\/fs2\/TaskModule.html#kleisliCatchableInstance[F[_],E](implicitF:fs2.util.Catchable[F]):fs2.util.Catchable[[γ$2$]cats.data.Kleisli[F,E,γ$2$]]", "kind" : "implicit def"}, {"label" : "catchableToMonadError", "tail" : "(F: Catchable[F]): MonadError[F, Throwable]", "member" : "fs2.interop.cats.Instances0.catchableToMonadError", "link" : "io\/iteratee\/fs2\/TaskModule.html#catchableToMonadError[F[_]](implicitF:fs2.util.Catchable[F]):cats.MonadError[F,Throwable]", "kind" : "implicit def"}, {"label" : "monadToCats", "tail" : "(F: Monad[F]): Monad[F]", "member" : "fs2.interop.cats.Instances1.monadToCats", "link" : "io\/iteratee\/fs2\/TaskModule.html#monadToCats[F[_]](implicitF:fs2.util.Monad[F]):cats.Monad[F]", "kind" : "implicit def"}, {"label" : "defaultTailRecM", "tail" : "(a: A)(f: (A) ⇒ F[Either[A, B]])(F: Monad[F]): F[B]", "member" : "fs2.interop.cats.Instances2.defaultTailRecM", "link" : "io\/iteratee\/fs2\/TaskModule.html#defaultTailRecM[F[_<:<?>],A,B](a:A)(f:A=>F[Either[A,B]])(implicitF:fs2.util.Monad[F]):F[B]", "kind" : "def"}, {"label" : "functorToCats", "tail" : "(F: Functor[F]): Functor[F]", "member" : "fs2.interop.cats.Instances2.functorToCats", "link" : "io\/iteratee\/fs2\/TaskModule.html#functorToCats[F[_]](implicitF:fs2.util.Functor[F]):cats.Functor[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/iteratee\/fs2\/TaskModule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/iteratee\/fs2\/TaskModule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/iteratee\/fs2\/TaskModule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/iteratee\/fs2\/TaskModule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/iteratee\/fs2\/TaskModule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/iteratee\/fs2\/TaskModule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/iteratee\/fs2\/TaskModule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/fs2\/TaskModule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/fs2\/TaskModule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/iteratee\/fs2\/TaskModule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/iteratee\/fs2\/TaskModule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/iteratee\/fs2\/TaskModule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/iteratee\/fs2\/TaskModule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/iteratee\/fs2\/TaskModule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/iteratee\/fs2\/TaskModule.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/iteratee\/fs2\/TaskModule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/iteratee\/fs2\/TaskModule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/iteratee\/fs2\/TaskModule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/iteratee\/fs2\/TaskModule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/iteratee\/fs2\/TaskModule.html", "kind" : "trait"}]};